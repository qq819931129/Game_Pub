{"version":3,"sources":["person.js"],"names":["js_dataControl","require","AttackType","cc","Class","extends","Component","properties","atkPoint","speed","atkType","Melee","atkDist","atkDistMax","atkRangedDistMin","atkRangedDistMax","defalutHP","allHP","die","type","body","default","Node","group","atkTarget","visible","flyerList","flyer","Prefab","groupId","heroName","x","y","point","route","state","onLoad","findAtkTarget","getComponent","HPBar","bodyComp","personComp","enemyNode","find","Canvas","init","playMove","log","Range","update","dt","hero_self","getHeroByName","atkTargetName","findNew","getChildByName","uuid","undefined","playAttack","inScope","checkTargetInGrids","name","createFlyer","instantiate","anchorX","anchorY","setPosition","v2","convertToNodeSpace","getPosition","damage","targetNode","targetDefPosition","setLocalZOrder","addChild","isDie","node","activeInHierarchy","goDie","parent","active","setHeroDieByName","damagePoint","updateLifeBar","showDamagePoint","enemyIsDie"],"mappings":"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","file":"person.js","sourceRoot":"../../../../../assets/js/New","sourcesContent":["//导入外部脚本\nvar js_dataControl = require(\"dataControl\");\nconst AttackType = require('Types').AttackType;\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        atkPoint: 10,//攻击力\n        speed: 1,//游戏速度\n        atkType: AttackType.Melee,//攻击类型\n        atkDist: null,//近身攻击距离\n        atkDistMax:null,//最大攻击距离\n        atkRangedDistMin:null,//远程攻击最小距离\n        atkRangedDistMax:null,//远程攻击最大距离\n        defalutHP:500,//默认生命值\n        allHP:500,//当前生命值\n        die: 1,//是否死亡 1否 0是，默认否（1）\n        type: 0,\n        body: { //身体节点\n            default: null,\n            type: cc.Node,\n        },\n        group: null, //组，我方or敌方\n        atkTarget: { //正在攻击的敌人\n            default: null,\n            type: cc.Node,\n            visible: false\n        },\n        flyerList:{//飞行物数组\n            default: null,\n            type: cc.Node\n        },\n        flyer:{//飞行物资源\n            default: null,\n            type: cc.Prefab\n        },\n        groupId : null,\t\t//英雄敌我阵容标识\n\t\theroName: null,\t\t//英雄预存资源生成名称\n\t\tx\t\t: null,\t\t//英雄当前所处格子的x轴\n\t\ty\t\t: null,\t\t//英雄当前所处格子的y轴\n\t\tpoint\t: null,\t\t//英雄标记  纪录具体是哪个英雄\n\t\troute\t: [],\t\t//英雄移动路线   状态切换为移动时，赋值路线\n\t\tstate\t: 10\t\t//英雄状态   10：静止，11：移动\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.findAtkTarget = this.getComponent('findAtkTarget');\n        this.HPBar = this.getComponent('hpBarHelper');\n        this.bodyComp = this.body.getComponent('body');\n        this.personComp = this.getComponent('person');\n        this.enemyNode =  cc.find('/Canvas/background/enemy');\n        this.Canvas = cc.find('/Canvas'); //获取这个节点的作用是用于坐标转换\n        this.bodyComp.init();\n        this.bodyComp.playMove();\n        cc.log(this.properties);\n\n        //测试远程攻击\n        this.atkType = AttackType.Range;//攻击类型\n        this.atkDist = 1;//近身攻击距离\n        this.atkDistMax = 1;//最大攻击距离\n        this.atkRangedDistMin = 3;//远程攻击最小距离\n        this.atkRangedDistMax = 3;//远程攻击最大距离\n    },\n\n    // called every frame, uncomment this function to activate update callback\n     update: function (dt) {\n        let hero_self = js_dataControl.getHeroByName(this.heroName);\n        if(this.atkTarget == null){\n            //寻敌\n            if(this.groupId == 1){\n                let atkTargetName = this.findAtkTarget.findNew(this.atkType, hero_self.y,hero_self.x,this.atkRangedDistMin,this.atkRangedDistMax);\n                if(atkTargetName && atkTargetName != ''){\n                    cc.log(atkTargetName);\n                    this.atkTarget = this.enemyNode.getChildByName(atkTargetName);\n                    if(typeof this.atkTarget == 'object' && this.atkTarget.uuid != undefined){\n                        this.bodyComp.playAttack();\n                    }\n                }\n            }\n        }else{\n            //检测目标是否还在攻击范围内\n            let inScope = this.findAtkTarget.checkTargetInGrids(this.atkType, this.atkTarget.name, hero_self.y, hero_self.x, this.atkRangedDistMin, this.atkRangedDistMax);\n            if(!inScope){\n                cc.log('清空攻击目标')\n                this.atkTarget = null;\n                this.bodyComp.playMove();\n            }else{\n                cc.log(this.atkTarget.name);\n            }\n\n            // var dist = this.findAtkTarget.getTargetDistance(this.node.getPosition(), this.atkTarget);\n            // this.atkTargetDist = dist;\n            // if(this.atkDistMax < this.atkTargetDist){\n            //     //清空目标，等下一次执行update时再寻找目标\n            //     this.bodyComp.playMove();\n            //     this.atkTarget = null; \n            // }else{    \n            //     //执行攻击动画\n            //     this.bodyComp.playAttack();\n            // }\n        }\n    },\n\n    createFlyer:function(){\n        if(this.atkRangedDistMin && this.atkRangedDistMax){\n            if(this.atkTarget != null){\n                var flyer = cc.instantiate(this.flyer);\n                flyer.group = this.group;\n                flyer.anchorX = 0;\n                flyer.anchorY = 0;\n                flyer.setPosition(cc.v2(0,0));\n                flyer.setPosition(this.Canvas.convertToNodeSpace(flyer.getPosition()));\n                flyer.getComponent('flyerMove').damage = this.atkPoint;\n                flyer.getComponent('flyerMove').targetNode = this.atkTarget;\n                flyer.getComponent('flyerMove').targetDefPosition = this.atkTarget.getPosition();\n                flyer.setLocalZOrder(10);\n                this.flyerList.addChild(flyer);\n                //flyer.getComponent('flyerMove').moveToPosition(this.atkTarget.getPosition());\n            }\n        }\n    },\n\n    isDie:function(){\n        return !this.node.activeInHierarchy || this.die == 0 || this.allHP <= 0;\n    },\n    goDie: function () {\n        this.die = 0;\n        this.node.parent.active = false;\n        js_dataControl.setHeroDieByName(this.heroName);\n    },\n    damage: function(damagePoint){\n        this.allHP = this.allHP - damagePoint;\n        this.HPBar.updateLifeBar(this.allHP / this.defalutHP);\n        this.HPBar.showDamagePoint(damagePoint);\n        if (this.allHP <= 0 ) {\n            this.goDie();\n        }\n    },\n    enemyIsDie:function(){\n        if (this.atkTarget.allHP <= 0 ) {\n            this.atkTarget.goDie();\n            this.atkTarget = null;\n            return true;\n        }else{\n            return false;\n        }\n    },\n});\n"]}