<<<<<<< HEAD
{"version":3,"sources":["person.js"],"names":["js_dataControl","require","AttackType","cc","Class","extends","Component","properties","atkPoint","speed","atkType","Melee","atkDist","atkDistMax","atkRangedDistMin","atkRangedDistMax","defalutHP","allHP","die","type","body","default","Node","group","atkTarget","visible","flyerList","flyer","Prefab","groupId","heroName","x","y","point","route","state","onLoad","findAtkTarget","getComponent","HPBar","bodyComp","personComp","enemyNode","find","background","init","playMove","Range","update","dt","hero_self","getHeroByName","atkTargetName","findNew","log","getChildByName","uuid","undefined","playAttack","inScope","checkTargetInGrids","name","createFlyer","instantiate","setPosition","v2","damage","targetNode","targetDefPosition","getPosition","setLocalZOrder","addChild","isDie","node","activeInHierarchy","goDie","parent","active","setHeroDieByName","damagePoint","updateLifeBar","showDamagePoint","enemyIsDie"],"mappings":"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","file":"person.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\js\\New","sourcesContent":["//导入外部脚本\r\nvar js_dataControl = require(\"dataControl\");\r\nconst AttackType = require('Types').AttackType;\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        atkPoint: 10,//攻击力\r\n        speed: 1,//游戏速度\r\n        atkType: AttackType.Melee,//攻击类型\r\n        atkDist: null,//近身攻击距离\r\n        atkDistMax:null,//最大攻击距离\r\n        atkRangedDistMin:null,//远程攻击最小距离\r\n        atkRangedDistMax:null,//远程攻击最大距离\r\n        defalutHP:500,//默认生命值\r\n        allHP:500,//当前生命值\r\n        die: 1,//是否死亡 1否 0是，默认否（1）\r\n        type: 0,\r\n        body: { //身体节点\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        group: null, //组，我方or敌方\r\n        atkTarget: { //正在攻击的敌人\r\n            default: null,\r\n            type: cc.Node,\r\n            visible: false\r\n        },\r\n        flyerList:{//飞行物数组\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        flyer:{//飞行物资源\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        groupId : null,\t\t//英雄敌我阵容标识\r\n\t\theroName: null,\t\t//英雄预存资源生成名称\r\n\t\tx\t\t: null,\t\t//英雄当前所处格子的x轴\r\n\t\ty\t\t: null,\t\t//英雄当前所处格子的y轴\r\n\t\tpoint\t: null,\t\t//英雄标记  纪录具体是哪个英雄\r\n\t\troute\t: [],\t\t//英雄移动路线   状态切换为移动时，赋值路线\r\n\t\tstate\t: 10\t\t//英雄状态   10：静止，11：移动\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.findAtkTarget = this.getComponent('findAtkTarget');\r\n        this.HPBar = this.getComponent('hpBarHelper');\r\n        this.bodyComp = this.body.getComponent('body');\r\n        this.personComp = this.getComponent('person');\r\n        this.enemyNode =  cc.find('/background/enemy');\r\n        this.background = cc.find('/background'); //获取这个节点的作用是用于坐标转换\r\n        this.bodyComp.init();\r\n        this.bodyComp.playMove();\r\n\r\n        //测试远程攻击\r\n        this.atkType = AttackType.Range;//攻击类型\r\n        this.atkDist = 1;//近身攻击距离\r\n        this.atkDistMax = 1;//最大攻击距离\r\n        this.atkRangedDistMin = 3;//远程攻击最小距离\r\n        this.atkRangedDistMax = 3;//远程攻击最大距离\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n     update: function (dt) {\r\n        let hero_self = js_dataControl.getHeroByName(this.heroName);\r\n        if(this.atkTarget == null){\r\n            //寻敌\r\n            if(this.groupId == 1){\r\n                let atkTargetName = this.findAtkTarget.findNew(this.atkType, hero_self.y,hero_self.x,this.atkRangedDistMin,this.atkRangedDistMax);\r\n                if(atkTargetName && atkTargetName != ''){\r\n                    cc.log(atkTargetName);\r\n                    this.atkTarget = this.enemyNode.getChildByName(atkTargetName);\r\n                    if(typeof this.atkTarget == 'object' && this.atkTarget.uuid != undefined){\r\n                        this.bodyComp.playAttack();\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            //检测目标是否还在攻击范围内\r\n            let inScope = this.findAtkTarget.checkTargetInGrids(this.atkType, this.atkTarget.name, hero_self.y, hero_self.x, this.atkRangedDistMin, this.atkRangedDistMax);\r\n            if(!inScope){\r\n                cc.log('清空攻击目标')\r\n                this.atkTarget = null;\r\n                this.bodyComp.playMove();\r\n            }else{\r\n                //cc.log(this.atkTarget.name);\r\n            }\r\n\r\n            // var dist = this.findAtkTarget.getTargetDistance(this.node.getPosition(), this.atkTarget);\r\n            // this.atkTargetDist = dist;\r\n            // if(this.atkDistMax < this.atkTargetDist){\r\n            //     //清空目标，等下一次执行update时再寻找目标\r\n            //     this.bodyComp.playMove();\r\n            //     this.atkTarget = null; \r\n            // }else{    \r\n            //     //执行攻击动画\r\n            //     this.bodyComp.playAttack();\r\n            // }\r\n        }\r\n    },\r\n\r\n    createFlyer:function(){\r\n        if(this.atkRangedDistMin && this.atkRangedDistMax){\r\n            if(this.atkTarget != null){\r\n                var flyer = cc.instantiate(this.flyer);\r\n                flyer.group = this.group;\r\n                flyer.setPosition(cc.v2(0,0));\r\n                // flyer.setPosition(this.Canvas.convertToNodeSpace(flyer.getPosition()));\r\n                flyer.getComponent('flyerMove').damage = this.atkPoint;\r\n                flyer.getComponent('flyerMove').targetNode = this.atkTarget;\r\n                flyer.getComponent('flyerMove').targetDefPosition = this.atkTarget.getPosition();\r\n                flyer.setLocalZOrder(10);\r\n                this.flyerList.addChild(flyer);\r\n                //flyer.getComponent('flyerMove').moveToPosition(this.atkTarget.getPosition());\r\n            }\r\n        }\r\n    },\r\n\r\n    isDie:function(){\r\n        return !this.node.activeInHierarchy || this.die == 0 || this.allHP <= 0;\r\n    },\r\n    goDie: function () {\r\n        this.die = 0;\r\n        this.node.parent.active = false;\r\n        js_dataControl.setHeroDieByName(this.heroName);\r\n    },\r\n    damage: function(damagePoint){\r\n        this.allHP = this.allHP - damagePoint;\r\n        this.HPBar.updateLifeBar(this.allHP / this.defalutHP);\r\n        this.HPBar.showDamagePoint(damagePoint);\r\n        if (this.allHP <= 0 ) {\r\n            this.goDie();\r\n        }\r\n    },\r\n    enemyIsDie:function(){\r\n        if (this.atkTarget.allHP <= 0 ) {\r\n            this.atkTarget.goDie();\r\n            this.atkTarget = null;\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    },\r\n});\r\n"]}
=======
{"version":3,"sources":["person.js"],"names":["js_dataControl","require","AttackType","cc","Class","extends","Component","properties","atkPoint","speed","atkType","Melee","atkDist","atkDistMax","atkRangedDistMin","atkRangedDistMax","defalutHP","allHP","die","type","body","default","Node","group","atkTarget","visible","flyerList","flyer","Prefab","groupId","heroName","x","y","point","route","state","onLoad","findAtkTarget","getComponent","HPBar","bodyComp","personComp","enemyNode","find","background","init","playMove","Range","update","dt","hero_self","getHeroByName","atkTargetName","findNew","log","getChildByName","uuid","undefined","playAttack","inScope","checkTargetInGrids","name","createFlyer","instantiate","setPosition","v2","damage","targetNode","targetDefPosition","getPosition","setLocalZOrder","addChild","isDie","node","activeInHierarchy","goDie","parent","active","setHeroDieByName","damagePoint","updateLifeBar","showDamagePoint","enemyIsDie"],"mappings":"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","file":"person.js","sourceRoot":"../../../../../assets/js/New","sourcesContent":["//导入外部脚本\nvar js_dataControl = require(\"dataControl\");\nconst AttackType = require('Types').AttackType;\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        atkPoint: 10,//攻击力\n        speed: 1,//游戏速度\n        atkType: AttackType.Melee,//攻击类型\n        atkDist: null,//近身攻击距离\n        atkDistMax:null,//最大攻击距离\n        atkRangedDistMin:null,//远程攻击最小距离\n        atkRangedDistMax:null,//远程攻击最大距离\n        defalutHP:500,//默认生命值\n        allHP:500,//当前生命值\n        die: 1,//是否死亡 1否 0是，默认否（1）\n        type: 0,\n        body: { //身体节点\n            default: null,\n            type: cc.Node,\n        },\n        group: null, //组，我方or敌方\n        atkTarget: { //正在攻击的敌人\n            default: null,\n            type: cc.Node,\n            visible: false\n        },\n        flyerList:{//飞行物数组\n            default: null,\n            type: cc.Node\n        },\n        flyer:{//飞行物资源\n            default: null,\n            type: cc.Prefab\n        },\n        groupId : null,\t\t//英雄敌我阵容标识\n\t\theroName: null,\t\t//英雄预存资源生成名称\n\t\tx\t\t: null,\t\t//英雄当前所处格子的x轴\n\t\ty\t\t: null,\t\t//英雄当前所处格子的y轴\n\t\tpoint\t: null,\t\t//英雄标记  纪录具体是哪个英雄\n\t\troute\t: [],\t\t//英雄移动路线   状态切换为移动时，赋值路线\n\t\tstate\t: 10\t\t//英雄状态   10：静止，11：移动\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.findAtkTarget = this.getComponent('findAtkTarget');\n        this.HPBar = this.getComponent('hpBarHelper');\n        this.bodyComp = this.body.getComponent('body');\n        this.personComp = this.getComponent('person');\n        this.enemyNode =  cc.find('/background/enemy');\n        this.background = cc.find('/background'); //获取这个节点的作用是用于坐标转换\n        this.bodyComp.init();\n        this.bodyComp.playMove();\n\n        //测试远程攻击\n        this.atkType = AttackType.Range;//攻击类型\n        this.atkDist = 1;//近身攻击距离\n        this.atkDistMax = 1;//最大攻击距离\n        this.atkRangedDistMin = 3;//远程攻击最小距离\n        this.atkRangedDistMax = 3;//远程攻击最大距离\n    },\n\n    // called every frame, uncomment this function to activate update callback\n     update: function (dt) {\n        let hero_self = js_dataControl.getHeroByName(this.heroName);\n        if(this.atkTarget == null){\n            //寻敌\n            if(this.groupId == 1){\n                let atkTargetName = this.findAtkTarget.findNew(this.atkType, hero_self.y,hero_self.x,this.atkRangedDistMin,this.atkRangedDistMax);\n                if(atkTargetName && atkTargetName != ''){\n                    cc.log(atkTargetName);\n                    this.atkTarget = this.enemyNode.getChildByName(atkTargetName);\n                    if(typeof this.atkTarget == 'object' && this.atkTarget.uuid != undefined){\n                        this.bodyComp.playAttack();\n                    }\n                }\n            }\n        }else{\n            //检测目标是否还在攻击范围内\n            let inScope = this.findAtkTarget.checkTargetInGrids(this.atkType, this.atkTarget.name, hero_self.y, hero_self.x, this.atkRangedDistMin, this.atkRangedDistMax);\n            if(!inScope){\n                cc.log('清空攻击目标')\n                this.atkTarget = null;\n                this.bodyComp.playMove();\n            }else{\n                cc.log(this.atkTarget.name);\n            }\n\n            // var dist = this.findAtkTarget.getTargetDistance(this.node.getPosition(), this.atkTarget);\n            // this.atkTargetDist = dist;\n            // if(this.atkDistMax < this.atkTargetDist){\n            //     //清空目标，等下一次执行update时再寻找目标\n            //     this.bodyComp.playMove();\n            //     this.atkTarget = null; \n            // }else{    \n            //     //执行攻击动画\n            //     this.bodyComp.playAttack();\n            // }\n        }\n    },\n\n    createFlyer:function(){\n        if(this.atkRangedDistMin && this.atkRangedDistMax){\n            if(this.atkTarget != null){\n                var flyer = cc.instantiate(this.flyer);\n                flyer.group = this.group;\n                flyer.setPosition(cc.v2(0,0));\n                // flyer.setPosition(this.Canvas.convertToNodeSpace(flyer.getPosition()));\n                flyer.getComponent('flyerMove').damage = this.atkPoint;\n                flyer.getComponent('flyerMove').targetNode = this.atkTarget;\n                flyer.getComponent('flyerMove').targetDefPosition = this.atkTarget.getPosition();\n                flyer.setLocalZOrder(10);\n                this.flyerList.addChild(flyer);\n                //flyer.getComponent('flyerMove').moveToPosition(this.atkTarget.getPosition());\n            }\n        }\n    },\n\n    isDie:function(){\n        return !this.node.activeInHierarchy || this.die == 0 || this.allHP <= 0;\n    },\n    goDie: function () {\n        this.die = 0;\n        this.node.parent.active = false;\n        js_dataControl.setHeroDieByName(this.heroName);\n    },\n    damage: function(damagePoint){\n        this.allHP = this.allHP - damagePoint;\n        this.HPBar.updateLifeBar(this.allHP / this.defalutHP);\n        this.HPBar.showDamagePoint(damagePoint);\n        if (this.allHP <= 0 ) {\n            this.goDie();\n        }\n    },\n    enemyIsDie:function(){\n        if (this.atkTarget.allHP <= 0 ) {\n            this.atkTarget.goDie();\n            this.atkTarget = null;\n            return true;\n        }else{\n            return false;\n        }\n    },\n});\n"]}
>>>>>>> 51e040bde0d643ce8407b6fd692740f2e5685a8a
