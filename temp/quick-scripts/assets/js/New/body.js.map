{"version":3,"sources":["body.js"],"names":["AttackType","require","cc","Class","extends","Component","properties","person","default","type","Node","onLoad","update","init","animHelper","getComponent","parentCopm","director","getCollisionManager","enabled","attackOver","atkTarget","activeInHierarchy","die","atkType","Melee","damagePoint","atkPoint","damage","createFlyer","moveOver","playAttack","playMove","getAnimState","onCollisionEnter","other","self","demage","node"],"mappings":";;;;;;AAAA,IAAMA,aAAaC,QAAQ,OAAR,EAAiBD,UAApC;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACTC,gBAAO,EAAE;AACJC,qBAAS,IADP;AAEFC,kBAAMP,GAAGQ;AAFP;AADE,KAHP;AASLC,YAAQ,kBAAY,CAEnB,CAXI;AAYLC,YAAQ,kBAAY,CAEnB,CAdI;AAeLC,UAAK,gBAAU;AACX,aAAKC,UAAL,GAAkB,KAAKC,YAAL,CAAkB,YAAlB,CAAlB;AACA,aAAKC,UAAL,GAAkB,KAAKT,MAAL,CAAYQ,YAAZ,CAAyB,QAAzB,CAAlB;;AAEA;AACAb,WAAGe,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACA;AACH,KAtBI;AAuBLC,gBAAY,sBAAY;AACpB,YAAI,KAAKJ,UAAL,CAAgBK,SAAhB,IAA6B,IAA7B,IACG,CAAC,KAAKL,UAAL,CAAgBK,SAAhB,CAA0BC,iBAD9B,IAEG,KAAKN,UAAL,CAAgBK,SAAhB,CAA0BE,GAA1B,IAAiC,CAFxC,EAE2C;AACvC;AACH;AACD,YAAG,KAAKP,UAAL,CAAgBQ,OAAhB,IAA2BxB,WAAWyB,KAAzC,EAA+C;AAC3C,gBAAIC,cAAc,KAAKV,UAAL,CAAgBW,QAAlC,CAD2C,CACC;AAC5C,iBAAKX,UAAL,CAAgBK,SAAhB,CAA0BN,YAA1B,CAAuC,QAAvC,EAAiDa,MAAjD,CAAwDF,WAAxD;AACH,SAHD,MAGK;AACD,iBAAKV,UAAL,CAAgBa,WAAhB;AACH;AACD;;AAEA;AACA;AACA;AACA;AACA;AACH,KA1CI;AA2CLC,cAAU,oBAAY;AAClB;AACH,KA7CI;;AA+CLC,gBAAW,sBAAU;AACjB,aAAKjB,UAAL,CAAgBiB,UAAhB;AACH,KAjDI;;AAmDLC,cAAS,oBAAU;AACf,aAAKlB,UAAL,CAAgBkB,QAAhB;AACH,KArDI;;AAuDLC,kBAAa,wBAAU;AACnB,aAAKnB,UAAL,CAAgBmB,YAAhB;AACH,KAzDI;AA0DL;;;;;AAKAC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrC,YAAIC,SAASF,MAAMG,IAAN,CAAWvB,YAAX,CAAwB,WAAxB,EAAqCa,MAAlD;AACA,aAAKZ,UAAL,CAAgBK,SAAhB,CAA0BN,YAA1B,CAAuC,QAAvC,EAAiDa,MAAjD,CAAwDS,MAAxD;AACH;;AAlEI,CAAT","file":"body.js","sourceRoot":"../../../../../assets/js/New","sourcesContent":["const AttackType = require('Types').AttackType;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n       person:{ //身体节点\n            default: null,\n            type: cc.Node,\n        }\n    },\n    onLoad: function () {\n       \n    },\n    update: function () {\n\n    },\n    init:function(){\n        this.animHelper = this.getComponent('animHelper');\n        this.parentCopm = this.person.getComponent('person');\n\n        //启用碰撞事件\n        cc.director.getCollisionManager().enabled = true;\n        //cc.director.getCollisionManager().enabledDebugDraw = true;\n    },\n    attackOver: function () {\n        if (this.parentCopm.atkTarget == null \n            || !this.parentCopm.atkTarget.activeInHierarchy \n            || this.parentCopm.atkTarget.die == 0) {\n            return;\n        }\n        if(this.parentCopm.atkType == AttackType.Melee){\n            var damagePoint = this.parentCopm.atkPoint; //后面会加入伤害公式计算\n            this.parentCopm.atkTarget.getComponent('person').damage(damagePoint);\n        }else{\n            this.parentCopm.createFlyer();\n        }\n        // if(this.parentCopm.atkTargetDist <= this.parentCopm.atkDist){\n           \n        // }\n        // else if(this.parentCopm.atkTargetDist >= this.parentCopm.atkRangedDistMin && this.parentCopm.atkTargetDist <= this.parentCopm.atkRangedDistMax){\n        //     //发射飞行物\n        //     this.parentCopm.createFlyer();\n        // }\n    },\n    moveOver: function () {\n        // cc.log('moveOver');\n    },\n\n    playAttack:function(){\n        this.animHelper.playAttack();\n    },\n\n    playMove:function(){\n        this.animHelper.playMove();\n    },\n    \n    getAnimState:function(){\n        this.animHelper.getAnimState();\n    },\n    /**\n     * 当碰撞产生的时候调用\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionEnter: function (other, self) {\n        let demage = other.node.getComponent('flyerMove').damage;\n        this.parentCopm.atkTarget.getComponent('person').damage(demage);\n    }\n\n});"]}