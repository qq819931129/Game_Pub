{"version":3,"sources":["animationTest.js"],"names":["cc","Class","extends","Component","properties","anim","default","type","Animation","animState","AnimationState","visible","start","onLoad","init","frameTime","animationMotion","animationOrientation","heroCodes","callBack","clipIndex","functionName","params","self","heroAnims","cook","then","data","log","catch","error","createClipEvent","frame","func","createAnimation","code","motion","orientation","atlasPath","aniState","loader","loadRes","SpriteAtlas","err","atlas","spriteFrames","getSpriteFrames","clip","AnimationClip","createWithSpriteFrames","name","cbFrameTime","length","node","addComponent","addClip","play","wrapMode","speed","loadSpriteAtlas","promise","Promise","resolve","reject","console","p","setTimeout"],"mappings":"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","file":"animationTest.js","sourceRoot":"../../../../../assets/js/test","sourcesContent":["// var clipEvent = require(\"animationClipEvent\");\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        anim: {\n            default: null,\n            type: cc.Animation\n        },\n        animState: {\n            default: null,\n            type: cc.AnimationState,\n            visible: false\n        }\n    },\n    start:function(){\n\n    },\n    onLoad: function () {\n        this.init();\n    },\n    init:function(){\n        this.frameTime = 10;\n        /**\n         *  动画动作\n            ack       = 攻击（进行时）\n            ackStance = 攻击姿势\n            art       = 技能\n            die       = 死亡\n            move      = 移动\n            stand     = 站立 \n         */\n        this.animationMotion = ['ack','ackStance','art','die','move','stand'];\n        /**\n         * 动画方向\n            left      = 左\n            downleft  = 左下\n            down      = 下\n            downright = 右下\n            right     = 右\n            upright   = 右上\n            up        = 上\n            upleft    = 左上\n         */\n        this.animationOrientation =['left','downleft','down','downright','right','upright','up','upleft'];\n        /**\n         * 英雄列表\n         */\n        this.heroCodes = ['0001'];\n\n        /**\n         * 回调方法参数对象\n         * first：第一帧\n         * 数字：某一帧\n         * last：最后一帧\n         */\n        this.callBack = {\n            'ack':{clipIndex:'last',functionName:'callBack',params:[]},\n            'ackStance':{clipIndex:'',functionName:'',params:[]},\n            'art':{clipIndex:'',functionName:'',params:[]},\n            'die':{clipIndex:'',functionName:'',params:[]},\n            'move':{clipIndex:'',functionName:'',params:[]},\n            'stand':{clipIndex:'',functionName:'',params:[]}\n        };\n        \n        var self = this\n        var heroAnims = {}; \n        // for(let code of this.heroCodes){\n        //     for(let motion of this.animationMotion){\n        //         let motionList = [];\n        //         for(let orientation of this.animationOrientation){\n        //             let anim = this.createAnimation(code,motion,orientation);\n        //             if(anim){\n        //                 motionList.push(anim);\n        //             }\n        //         }\n        //         heroAnims[motion] = motionList;\n        //     }\n        // }\n        // let anim = this.createAnimation('0001','ack','downright');\n        // cc.log(anim);\n        // cc.log(heroAnims);\n\n        // this.cook().then(function(data){\n        //     cc.log(data);\n        // }).catch(function(error){\n        //     cc.log(error);\n        // })\n        // this.loadSpriteAtlas('0001/ack/downright');\n        this.cook().then(function(data){\n             cc.log(data);\n        }).catch((error) => {\n            cc.log(error);\n        });\n        cc.log(\"方法结束\");\n    },\n    createClipEvent : function(frame,func,params){\n        return {frame,func,params};\n    },\n    callBack :function(){\n        cc.log('callBack');\n    },\n    /**\n     * code：英雄编号\n     * motion：动作\n     * orientation：方向\n     */\n    createAnimation:function(code, motion, orientation){\n        let atlasPath = `${code}/${motion}/${orientation}`;\n        //var atlasPath = `0001/ack/downright`;\n        var self = this;\n        var anim = null;\n        var aniState = null;\n        cc.loader.loadRes(atlasPath, cc.SpriteAtlas, function (err, atlas) {\n            //cc.log(atlas);\n            if(err){\n                cc.log(err);\n                return null;\n            }\n            let spriteFrames = atlas.getSpriteFrames();\n            let clip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, self.frameTime);\n            clip.name = orientation\n            let cbFrameTime = self.frameTime * spriteFrames.length;\n            //let clipEvent = self.createClipEvent(cbFrameTime,'callBack',[]);\n            //clip.events.push(clipEvent);\n            // cc.log(clipEvent);\n            // cc.log(clip.events);\n            // cc.log(clip);\n            anim = self.node.addComponent(cc.Animation);\n            anim.addClip(clip);\n            aniState = anim.play(orientation);\n            aniState.wrapMode = 2;// 播放模式\n            aniState.speed = 1;// 播放速度控制\n            //aniState = anim.play('downright');\n            cc.log(anim);\n            return anim;\n        });\n        return null;\n    },\n    loadSpriteAtlas:function(atlasPath){\n        cc.log(\"开始请求图片集\");\n        var promise = new Promise((resolve, reject) => {\n            cc.loader.loadRes(atlasPath, cc.SpriteAtlas, function (err, atlas) {\n                //cc.log(atlas);\n                if(err){\n                    reject(err);\n                }\n                cc.log(\"请求成功\"+atlas.getSpriteFrames());\n                resolve(atlas.getSpriteFrames());\n            }); \n        });\n        promise.then(function(spriteFrames){\n            return spriteFrames;\n        }).catch(function(err){\n            cc.log(err);\n        });\n        \n    },\n    cook :function (){\n        console.log('开始做饭。');\n        var p = new Promise(function(resolve, reject){\n            setTimeout(function(){\n                console.log('做饭完毕！');\n                if(false){\n                    resolve('鸡蛋炒饭');\n                }else{\n                    reject(\"厨房爆炸!!!\");\n                }\n            }, 10000);\n        });\n        return p;\n    }\n});\n "]}