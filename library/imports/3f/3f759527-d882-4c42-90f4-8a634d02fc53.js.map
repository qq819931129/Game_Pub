{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\js\\base/assets\\js\\base\\algorithm_A.js"],"names":["module","exports","getAttPos_list","data","attPos_list","directionList","y","x","heroItem","atkRangedDistMin","atkRangedDistMax","atkRangedMin","i","tempCheckTarget","batBox","getChildByName","startTarget","checkTarget","getComponent","j","length","attPos_item","push","getAttPos","console","log","bat_obstacle","bat_hero","point","getRangeEnemy","tempList","enemyList","minF","hero_list","groupId","H_x","Math","abs","H_y","H","G","item","F","send","routeDirection","endTarget","openList","closeList","sureList","isSure_start","isSure_end","minG","tempEndTarget","parent","isStart","direction","setColor","cc","color","obsExList","obsId_right","obsId_down","obsId_left","obsId_top","tempEnemyList","enemId_right","enemId_down","enemId_left","enemId_top","enemyList2","z","isOpen","isClose","isObstacle","isObsEx","isEnemy","isEnemy2","o","label_G","Node","addComponent","Label","fontSize","string","addChild","splice","reverse","tempSureList","getNearEnemy","target"],"mappings":"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","file":"algorithm_A.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\js\\base","sourcesContent":["\r\n//获取原点目标在最终目标的所有可攻击格子位置list  data数组---看A*算法注释\r\nmodule.exports.getAttPos_list = function(data){\r\n\tlet attPos_list = [];//-------------可攻击的格子位置数组\r\n\t//攻击范围公式数组\r\n\tlet directionList = [[{y:0,x:1},{y:-1,x:0},{y:0,x:-1},{y:1,x:0}],\r\n\t[{y:0,x:2},{y:-1,x:1},{y:-2,x:0},{y:-1,x:-1},{y:0,x:-2},{y:1,x:-1},{y:2,x:0},{y:1,x:1}],\r\n\t[{y:0,x:3},{y:-1,x:2},{y:-2,x:1},{y:-3,x:0},{y:-2,x:-1},{y:-1,x:-2},{y:0,x:-3},{y:1,x:-2},{y:2,x:-1},{y:3,x:0},{y:2,x:1},{y:1,x:2}]\r\n\t];\r\n\tif(data.heroItem.atkRangedDistMin == data.heroItem.atkRangedDistMax){\r\n\t\tvar atkRangedMin = data.heroItem.atkRangedDistMin - 1;\r\n\t}else{\r\n\t\tvar atkRangedMin = data.heroItem.atkRangedDistMin;\r\n\t}\r\n\tfor (let i = 0; i < data.heroItem.atkRangedDistMax; i++) {//data.heroItem.\r\n\t\tif(i == 0 || i >= atkRangedMin){\r\n\t\t\t//获取最终目标的所有可攻击格子位置\r\n\t\t\t//let tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (data.endTarget.y) + \"_x\" + (data.endTarget.x));\r\n\t\t\t//获取原点目标在最终目标的所有可攻击格子位置\r\n\t\t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (data.startTarget.y) + \"_x\" + (data.startTarget.x));\r\n\t\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\t\tfor (let j = 0; j < directionList[i].length; j++) {\r\n\t\t\t\t\tlet attPos_item = {y:(checkTarget.y + directionList[i][j].y),x:(checkTarget.x + directionList[i][j].x)};\r\n\t\t\t\t\tattPos_list.push(attPos_item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn attPos_list;\r\n}\r\n//获取原点目标在最终目标 最近的可攻击的格子位置  data数组---看A*算法注释\r\nmodule.exports.getAttPos = function(data){\r\n\tlet attPos_list = module.exports.getAttPos_list(data);\r\n\tconsole.log(attPos_list);\r\n\t//重大问题，英雄路过的路线上有其他英雄，会被清除bat_hero，要改移动算法那边\r\n\tfor (let i = 0; i < attPos_list.length; i++) {\r\n\t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (attPos_list[i].y) + \"_x\" + (attPos_list[i].x));\r\n\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\tconsole.log(checkTarget,checkTarget.bat_obstacle,!checkTarget.bat_hero.point);\r\n\t\t\tif(checkTarget.bat_obstacle){//--------------------------当前循环九宫格格子是障碍物\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!checkTarget.bat_hero.point) {//---------------------当前循环九宫格格子是英雄\r\n\t\t\t\tconsole.log(checkTarget);\r\n\t\t\t\treturn checkTarget;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//索敌算法--------根据自身攻击范围搜索最近敌人 ，返回敌人所在的格子对象\r\nmodule.exports.getRangeEnemy = function(data){\r\n\tlet attPos_list = module.exports.getAttPos_list(data);\r\n\tlet tempList = [];\r\n\tlet enemyList = [];\r\n\tvar minF = 0;\r\n\tfor (let i = 0; i < data.hero_list.length; i++) {\r\n\t\tif (data.hero_list[i].groupId == 2) {\r\n\t    \tlet H_x = Math.abs(data.hero_list[i].x - data.startTarget.x);\r\n\t\t\tlet H_y = Math.abs(data.hero_list[i].y - data.startTarget.y);\r\n\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\tlet G = 0;\r\n\t\t\tlet item = {\r\n\t\t\t\tx: data.hero_list[i].x,\r\n\t\t\t\ty: data.hero_list[i].y,\r\n\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t    \t\tF: G+H\r\n\t\t\t}\r\n\t\t\ttempList.push(item);\r\n\t\t\tenemyList.push(data.hero_list[i]);\r\n\t\t}\r\n\t}\r\n\tfor (let i = 0; i < tempList.length; i++) {\r\n\t\tif (tempList[i].F && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n\t\t\tminF = tempList[i];\r\n\t\t}\r\n\t\tif (minF.F > tempList[i].F) {//根据F值取最近敌人\r\n\t\t\tminF = tempList[i];\r\n\t\t}\r\n\t}\r\n\tconsole.log(data,attPos_list);\r\n\tvar send = data.batBox.getChildByName(\"batBox_y\" + minF.y + \"_x\" + minF.x).getComponent(\"batBox_basic\");\r\n\tfor (var i = 0; i < attPos_list.length; i++) {\n\t\tif(attPos_list[i].y == minF.y && attPos_list[i].x == minF.x){\r\n\t\t\tfor (var j = 0; j < data.hero_list.length; j++) {\n\t\t\t\tif(data.hero_list[j].y == minF.y && data.hero_list[j].x == minF.x){\r\n\t\t\t\t\treturn data.hero_list[j];\r\n\t\t\t\t}\n\t\t\t}\r\n\t\t}\n\t}\r\n\treturn false;\r\n};\r\n\r\n//A*算法   (data数组---startTarget：原点目标，endTarget：终点目标，batBox：全局格子数组，hero_list：全局英雄数组，heroItem：移动目标对象)\r\nmodule.exports.routeDirection = function(data){\r\n\t//if (startTarget.x == endTarget.x && startTarget.y == endTarget.y || endTarget.bat_obstacle || endTarget.bat_hero.groupId == 2) { return false; }//---------------如果起点和终点一样就退出方法\r\n\tconsole.log(data);\r\n\tif ((data.startTarget.x == data.endTarget.x && data.startTarget.y == data.endTarget.y) || data.endTarget.bat_obstacle) { return false; }//---第一次检测，起点和终点一样就退出方法\r\n\tlet openList = [];//---------------九宫格临时存放格子数组\r\n\tlet closeList = [];//--------------九宫格临时存放确认数组\r\n\tlet sureList = [];//---------------九宫格最终确认数组\r\n\tlet isSure_start = 0;//------------是否到达终点   0：不是   1：是\r\n\tlet isSure_end = 0;//--------------是否到达起点   0：不是   1：是\r\n\tlet minF = 0;//--------------------F值最小值\r\n\tlet minG = 0;//--------------------G值最小值\r\n\tvar tempEndTarget = null;//--------最后所选目标格子对象\r\n\tlet parent = {x: data.startTarget.x, y: data.startTarget.y, isStart: 1, G: 0, H:0, F:0};//-----------isStart: 起点的唯一标识\r\n\topenList.push(parent);\r\n\t//方向数组  也可用作判断格子九宫格里其余格子是否在战场内数组   id：判断方向的数值   direction：上下左右斜方向值\r\n\tlet directionList = [{y:0,x:1,direction:1},{y:-1,x:1,direction:2},{y:-1,x:0,direction:3},{y:-1,x:-1,direction:4},{y:0,x:-1,direction:5},{y:1,x:-1,direction:6},{y:1,x:0,direction:7},{y:1,x:1,direction:8}];\r\n\tdata.batBox.getChildByName(\"batBox_y\" + data.startTarget.y + \"_x\" + data.startTarget.x).setColor(cc.color(\"#008102\"));//-----测试阶段，上颜色标识用\r\n\tdata.batBox.getChildByName(\"batBox_y\" + data.endTarget.y + \"_x\" + data.endTarget.x).setColor(cc.color(\"#fff\"));//-----测试阶段，上颜色标识用\r\n\tif(data.endTarget.bat_hero.groupId == 2){//----------------获取敌人目标\r\n\t\ttempEndTarget = module.exports.getAttPos(data);\r\n\t}\r\n\tif(!tempEndTarget){//如没有获取到敌人目标，就读取传参进来的最终目标\r\n\t\ttempEndTarget = data.batBox.getChildByName(\"batBox_y\" + data.endTarget.y + \"_x\" + data.endTarget.x).getComponent(\"batBox_basic\");\r\n\t}\r\n\tconsole.log(tempEndTarget);\r\n\tif (data.startTarget.x == tempEndTarget.x && data.startTarget.y == tempEndTarget.y) {  return false; }//---第二次检测，起点和终点一样就退出方法，因为可能上面的处理结果会把最终位置改变为路线起点\r\n\tfor (let j = 0; j < openList.length; j++) {\r\n\t\tif (isSure_start == 1) { break; }//----------已到达终点，退出循环\r\n\t\tlet obsExList = [];//--------------障碍物上下左右格子的数组\r\n\t\tlet obsId_right = null;//----------当前障碍物格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_down = null;//-----------当前障碍物格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_left = null;//-----------当前障碍物格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_top = null;//------------当前障碍物格子的上侧格子--临时禁止加入临时数组\r\n    \tvar tempEnemyList = [];\r\n\t\tlet enemId_right = null;//----------当前敌人格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_down = null;//-----------当前敌人格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_left = null;//-----------当前敌人格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_top = null;//------------当前敌人格子的上侧格子--临时禁止加入临时数组\r\n\t\tfor (let i = 0; i < directionList.length; i++) {//------------------获取路线障碍物上下左右格子的数组\r\n\t\t\t//计算出九宫格内当前循环的格子是否在战场内  原理：利用格子的行列值进行运算，得出结果异常则不属于战场内格子\r\n    \t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n\t\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tobsId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tobsId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tobsId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tobsId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\tobsExList.push(obsId_right,obsId_down,obsId_left,obsId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tvar enemyList2 = [];\r\n    \t\t\tfor (var z = 0; z < data.hero_list.length; z++) {\r\n    \t\t\t\tif(data.hero_list[z].point == checkTarget.bat_hero.point && data.hero_list[z].groupId == 2){\r\n    \t\t\t\t\tenemyList2.push(data.hero_list[z]);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (enemyList2) {\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tenemId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tenemId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tenemId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tenemId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\ttempEnemyList.push(enemId_right,enemId_down,enemId_left,enemId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n\t\t}\r\n    \tfor (let i = 0; i < directionList.length; i++) {//------------------获取路线临时数组\r\n    \t\tlet isOpen = 0;//------------------是否已记录在临时数组标识   0：不是   1：是\r\n    \t\tlet isClose = 0;//-----------------是否已记录在确认数组标识   0：不是   1：是\r\n    \t\tlet isObstacle = 0;//--------------是否障碍物   0：不是   1：是\r\n    \t\tlet isObsEx = 0;//-----------------当前格子是否位于障碍物格子上下左右侧的格子位置上，用于判断是否处于斜格处理   0：不是   1：是\r\n    \t\tvar isEnemy = false;\r\n    \t\tvar isEnemy2 = 0;\r\n    \t\t//计算出九宫格内当前循环的格子  原理：利用格子的行列值进行运算，得出结果异常则不属于战场内格子\r\n    \t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\t\tvar enemyList2 = [];\r\n    \t\t\tfor (var z = 0; z < data.hero_list.length; z++) {\r\n    \t\t\t\tif(data.hero_list[z].point == checkTarget.bat_hero.point && data.hero_list[z].groupId == 2){\r\n    \t\t\t\t\tenemyList2.push(data.hero_list[z]);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tisObstacle = 1;\r\n    \t\t\t}else if(enemyList2.length != 0){\r\n    \t\t\t\tisEnemy = true;\r\n    \t\t\t}else{\r\n\t    \t\t\tfor (let x = 0; x < closeList.length; x++) {//------------------当前循环九宫格格子是否已记录在确认数组\r\n\t\t    \t\t\tif (checkTarget.x == closeList[x].x && checkTarget.y == closeList[x].y) {\r\n\t\t    \t\t\t\tisClose = 1;\r\n\t\t    \t\t\t\tbreak;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t\tfor (let x = 0; x < openList.length; x++) {//-------------------当前循环九宫格格子是否已记录在临时数组\r\n\t\t    \t\t\tif (checkTarget.x == openList[x].x && checkTarget.y == openList[x].y) {\r\n\t\t    \t\t\t\tisOpen = 1;\r\n\t\t    \t\t\t\tbreak;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t\tfor (let o = 0; o < obsExList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n    \t\t\t\t\tif (checkTarget.x == obsExList[o].x && checkTarget.y == obsExList[o].y) {\r\n\t    \t\t\t\t\tisObsEx = 1;\r\n\t    \t\t\t\t\tbreak;\r\n\t    \t\t\t\t}\r\n    \t\t\t\t}\r\n\t    \t\t\tfor (let o = 0; o < tempEnemyList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n    \t\t\t\t\tif (checkTarget.x == tempEnemyList[o].x && checkTarget.y == tempEnemyList[o].y) {\r\n\t    \t\t\t\t\tisEnemy2 = 1;\r\n\t    \t\t\t\t\tbreak;\r\n\t    \t\t\t\t}\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (isClose == 0 && isOpen == 0 && isObstacle == 0 && isObsEx == 0 && !isEnemy && isEnemy2 == 0) {//-------------如任何检查判断为未触发，则视为当前格子是新处理格子\r\n\t\t\t\t\tlet H_x = Math.abs(tempEndTarget.x - checkTarget.x);\r\n\t\t\t\t\tlet H_y = Math.abs(tempEndTarget.y - checkTarget.y);\r\n\t\t\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\t\t\tlet G;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(i == 0 || i == 2 || i == 4 || i == 6){\r\n\t\t\t\t\t\tG = 10 + parent.G;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tG = 14 + parent.G;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet item = {\r\n\t\t\t\t\t\tx: checkTarget.x,\r\n\t\t\t\t\t\ty: checkTarget.y,\r\n\t\t\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t\t\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t\t\t    \t\tF: G+H,\r\n\t\t\t    \t\tdirection: directionList[i].direction\r\n\t\t\t\t\t}\r\n\t\t\t        let label_G = new cc.Node();\r\n\t\t\t        label_G.addComponent(cc.Label);\r\n\t\t\t        label_G.getComponent(cc.Label).fontSize = 12\r\n\t\t\t        label_G.getComponent(cc.Label).string = (checkTarget.y + \"\" + checkTarget.x)+ \"，F：\"+(G+H)+  \"\\nG:\"+G+\"，H:\"+H;\r\n\t\t\t        tempCheckTarget.addChild(label_G);\r\n\t\t\t\t\topenList.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    \tif (openList[0].isStart == 1) {//-----------处理起点的首次增删数组操作\r\n    \t\tcloseList.push(openList[0]);\r\n\t\t\topenList.splice(0,1);\r\n\t\t\tj = -1;//-------------------------------初始化循环次数\r\n    \t}\r\n    \tfor (let i = 0; i < openList.length; i++) {//----------循环取F值最小值\r\n    \t\tif (openList[i] && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n    \t\t\tminF = openList[i];\r\n    \t\t}\r\n    \t\tif (minF.F > openList[i].F) {\r\n    \t\t\tminF = openList[i];\r\n    \t\t}\r\n    \t}\r\n    \t//console.log(openList,parent);\r\n    \tfor (let i = 0; i < openList.length; i++) {//----------依靠最新的F值最小值格子得出新的父节点\r\n    \t\tif (openList[i].F == minF.F) {\r\n    \t\t\tparent = openList[i];\r\n    \t\t\tcloseList.push(openList[i]);\r\n    \t\t\topenList.splice(i,1);\r\n    \t\t\tj = -1;//-------------------------------初始化循环次数\r\n    \t\t\tminF = 0;//-----------初始化F值最小值\r\n    \t\t}\r\n    \t}\r\n    \tif (parent.x == tempEndTarget.x && parent.y == tempEndTarget.y) {//---------------如果临时确认数组收录了终点，就退出循环\r\n\t\t\tisSure_start = 1;\r\n\t\t}\r\n\t}\r\n\t//console.log(closeList);\r\n\tfor (let j = 0; j < closeList.length; j++) {\r\n\t\tdata.batBox.getChildByName(\"batBox_y\" + closeList[j].y + \"_x\" + closeList[j].x).setColor(cc.color(\"#008102\"));//-----测试阶段，上颜色标识用\r\n\t}\r\n\tcloseList = closeList.reverse();\r\n\tsureList.push(parent);\r\n\t//计算最终路线    原理：从临时确认数组中反过来走到起点\r\n\tfor (let j = 0; j < closeList.length; j++) {\r\n\t\tif (isSure_end == 1) { break; }//----------已回到起点，退出循环\r\n\t\tlet obsExList = [];//--------------障碍物上下左右格子的数组\r\n\t\tlet obsId_right = null;//----------当前障碍物格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_down = null;//-----------当前障碍物格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_left = null;//-----------当前障碍物格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_top = null;//------------当前障碍物格子的上侧格子--临时禁止加入临时数组\r\n\t\tlet tempSureList = [];\r\n\t\t\r\n    \tvar tempEnemyList = [];\r\n\t\tlet enemId_right = null;//----------当前敌人格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_down = null;//-----------当前敌人格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_left = null;//-----------当前敌人格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_top = null;//------------当前敌人格子的上侧格子--临时禁止加入临时数组\r\n\t\tfor (let i = 0; i < directionList.length; i++) {\r\n\t\t\t//获取当前循环的父节点格子  \r\n    \t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tobsId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tobsId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tobsId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tobsId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\tobsExList.push(obsId_right,obsId_down,obsId_left,obsId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n\t\t\tvar enemyList2 = [];\r\n\t\t\tfor (var z = 0; z < data.hero_list.length; z++) {\r\n\t\t\t\tif(data.hero_list[z].point == checkTarget.bat_hero.point && data.hero_list[z].groupId == 2){\r\n\t\t\t\t\tconsole.log(data.hero_list[z].point , checkTarget.bat_hero.point , data.hero_list[z].groupId == 2);\r\n\t\t\t\t\tenemyList2.push(data.hero_list[z]);\r\n\t\t\t\t\tconsole.log(enemyList2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (enemyList2) {\r\n\t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n\t\t\t\t\tenemId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n\t\t\t\t\tenemId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n\t\t\t\t\tenemId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n\t\t\t\t\tenemId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n\t\t\t\t\ttempEnemyList.push(enemId_right,enemId_down,enemId_left,enemId_top);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < directionList.length; i++) {\r\n    \t\tlet isClose = 0;//-----------------是否已记录在确认数组标识   0：不是   1：是\r\n    \t\tlet isObstacle = 0;//--------------是否障碍物   0：不是   1：是\r\n    \t\tlet isObsEx = 0;//-----------------当前格子是否位于障碍物格子上下左右侧的格子位置上，用于判断是否处于斜格处理   0：不是   1：是\r\n\t\t\tvar isEnemy = false;\r\n    \t\tvar isEnemy2 = 0;\r\n\t\t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n    \t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n    \t\t\t/*if (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tisObstacle = 1;\r\n    \t\t\t}else if(enemyList2.length != 0){\r\n    \t\t\t\tconsole.log(6666);\r\n    \t\t\t\tisEnemy = true;\r\n    \t\t\t}else{*/\r\n    \t\t\t\tfor (let x = 0; x < closeList.length; x++) {//------------------当前循环九宫格格子是否已记录在确认数组\r\n\t\t    \t\t\tif (checkTarget.x == closeList[x].x && checkTarget.y == closeList[x].y) {\r\n\t\t    \t\t\t\tfor (let o = 0; o < obsExList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t\t    \t\t\t\t\tif (checkTarget.x == obsExList[o].x && checkTarget.y == obsExList[o].y) {\r\n\t\t\t    \t\t\t\t\tisObsEx = 1;\r\n\t\t\t    \t\t\t\t\tbreak;\r\n\t\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\t}\r\n\t\t\t    \t\t\tfor (let o = 0; o < tempEnemyList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t\t    \t\t\t\t\tif (checkTarget.x == tempEnemyList[o].x && checkTarget.y == tempEnemyList[o].y) {\r\n\t\t\t    \t\t\t\t\tisEnemy2 = 1;\r\n\t\t\t    \t\t\t\t\tbreak;\r\n\t\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\tif (isObsEx == 0 && isEnemy2 == 0) {\r\n\t\t    \t\t\t\t\ttempSureList.push(closeList[x]);\r\n\t\t    \t\t\t\t}\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n    \t\t\t//}\r\n    \t\t}\r\n\t\t}\r\n\t\tconsole.log(tempSureList);\r\n\t\tfor (let i = 0; i < tempSureList.length; i++) {//----------循环取F值最小值\r\n    \t\tif (tempSureList[i] && minG == 0) {//------------------------为了排除可能会遇到没G值的父格子，当存在的G值的循环才初始化\r\n    \t\t\tminG = tempSureList[i];\r\n    \t\t}\r\n    \t\tif (minG.G > tempSureList[i].G) {\r\n    \t\t\tminG = tempSureList[i];\r\n    \t\t}\r\n    \t}\r\n    \tfor (let i = 0; i < tempSureList.length; i++) {//----------依靠最新的G值最小值格子得出新的父节点\r\n    \t\tif (tempSureList[i].G == minG.G) {\r\n    \t\t\tparent = tempSureList[i];\r\n    \t\t\tsureList.push(tempSureList[i]);\r\n    \t\t\tminG = 0;//-----------初始化G值最小值\r\n    \t\t}\r\n    \t}\r\n\t\tif (parent.x == data.startTarget.x && parent.y == data.startTarget.y) {//---------------如果临时确认数组收录了起点，就退出循环\r\n\t\t\tisSure_end = 1;\r\n\t\t}\r\n\t}\r\n\tfor (let j = 0; j < sureList.length; j++) {\r\n\t\tdata.batBox.getChildByName(\"batBox_y\" + sureList[j].y + \"_x\" + sureList[j].x).setColor(cc.color(\"#bbb\"));//-----测试阶段，上颜色标识用\r\n\t}\r\n\tconsole.log(sureList,closeList);\r\n\treturn sureList.reverse();\r\n};\r\n\r\n\r\n//索敌算法--------根据自身为出发点搜索最近敌人 ，返回敌人所在的格子对象\r\nmodule.exports.getNearEnemy = function(data){\r\n\tlet tempList = [];\r\n\tlet enemyList = [];\r\n\tvar minF = 0;\r\n\tfor (let i = 0; i < data.hero_list.length; i++) {\r\n\t\tif (data.hero_list[i].groupId == 2) {\r\n\t    \tlet H_x = Math.abs(data.hero_list[i].x - data.target.x);\r\n\t\t\tlet H_y = Math.abs(data.hero_list[i].y - data.target.y);\r\n\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\tlet G = 0;\r\n\t\t\tlet item = {\r\n\t\t\t\tx: data.hero_list[i].x,\r\n\t\t\t\ty: data.hero_list[i].y,\r\n\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t    \t\tF: G+H\r\n\t\t\t}\r\n\t\t\ttempList.push(item);\r\n\t\t\tenemyList.push(data.hero_list[i]);\r\n\t\t}\r\n\t}\r\n\tfor (let i = 0; i < tempList.length; i++) {\r\n\t\tif (tempList[i].F && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n\t\t\tminF = tempList[i];\r\n\t\t}\r\n\t\tif (minF.F > tempList[i].F) {//根据F值取最近敌人\r\n\t\t\tminF = tempList[i];\r\n\t\t}\r\n\t}\r\n\tvar send = data.batBox.getChildByName(\"batBox_y\" + minF.y + \"_x\" + minF.x).getComponent(\"batBox_basic\");\r\n\treturn send;\r\n};"]}