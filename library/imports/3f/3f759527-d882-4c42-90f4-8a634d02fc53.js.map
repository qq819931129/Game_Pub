{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\js\\base/assets\\js\\base\\algorithm_A.js"],"names":["module","exports","getAttPos","data","directionList","attPos_list","attPos_right","attPos_down","attPos_left","attPos_top","i","tempCheckTarget","batBox","getChildByName","endTarget","y","x","checkTarget","getComponent","push","console","log","length","bat_obstacle","bat_hero","point","routeDirection","startTarget","openList","closeList","sureList","isSure_start","isSure_end","minF","minG","tempEndTarget","parent","isStart","G","H","F","direction","setColor","cc","color","groupId","j","obsExList","obsId_right","obsId_down","obsId_left","obsId_top","tempEnemyList","enemId_right","enemId_down","enemId_left","enemId_top","enemyList2","z","hero_list","isOpen","isClose","isObstacle","isObsEx","isEnemy","isEnemy2","o","H_x","Math","abs","H_y","item","label_G","Node","addComponent","Label","fontSize","string","addChild","splice","reverse","tempSureList","getNearEnemy","tempList","enemyList","dataList","target","send"],"mappings":"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","file":"algorithm_A.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\js\\base","sourcesContent":["\r\n//获取目标可攻击的格子位置  data数组---看A*算法注释   directionList：方向数组\r\nmodule.exports.getAttPos = function(data,directionList){\r\n\tlet attPos_list = [];//-------------可攻击的格子位置数组\r\n\tlet attPos_right = null;//----------当前可攻击的格子位置右侧格子\r\n\tlet attPos_down = null;//-----------当前可攻击的格子位置下侧格子\r\n\tlet attPos_left = null;//-----------当前可攻击的格子位置左侧格子\r\n\tlet attPos_top = null;//------------当前可攻击的格子位置上侧格子\r\n\tfor (let i = 0; i < 2; i++) {//data.heroItem.\r\n\t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (data.endTarget.y) + \"_x\" + (data.endTarget.x));\r\n\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tattPos_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n\t\t\t\tattPos_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n\t\t\t\tattPos_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n\t\t\t\tattPos_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n\t\t\t\tattPos_list.push(attPos_right,attPos_down,attPos_left,attPos_top);\r\n\t\t\t}else{\r\n\t\t\t\tattPos_right = {y:(checkTarget.y + directionList[0].y * (i+1)),x:(checkTarget.x + directionList[0].x * (i+1))};\r\n\t\t\t\tattPos_down = {y:(checkTarget.y + directionList[2].y * (i+1)),x:(checkTarget.x + directionList[2].x * (i+1))};\r\n\t\t\t\tattPos_left = {y:(checkTarget.y + directionList[4].y * (i+1)),x:(checkTarget.x + directionList[4].x * (i+1))};\r\n\t\t\t\tattPos_top = {y:(checkTarget.y + directionList[6].y * (i+1)),x:(checkTarget.x + directionList[6].x * (i+1))};\r\n\t\t\t\tattPos_list.push(attPos_right,attPos_down,attPos_left,attPos_top);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconsole.log(attPos_list);\r\n\t//重大问题，英雄路过的路线上有其他英雄，会被清除bat_hero，要改移动算法那边\r\n\tfor (let i = 0; i < attPos_list.length; i++) {\r\n\t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (attPos_list[i].y) + \"_x\" + (attPos_list[i].x));\r\n\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\tconsole.log(checkTarget,checkTarget.bat_obstacle,!checkTarget.bat_hero.point);\r\n\t\t\tif(checkTarget.bat_obstacle){//--------------------------当前循环九宫格格子是障碍物\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!checkTarget.bat_hero.point) {//---------------------当前循环九宫格格子是英雄\r\n\t\t\t\tconsole.log(checkTarget);\r\n\t\t\t\treturn checkTarget;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//A*算法   (data数组---startTarget：原点目标，endTarget：终点目标，batBox：全局格子数组，hero_list：全局英雄数组，heroItem：移动目标对象)\r\nmodule.exports.routeDirection = function(data){\r\n\t//if (startTarget.x == endTarget.x && startTarget.y == endTarget.y || endTarget.bat_obstacle || endTarget.bat_hero.groupId == 2) { return false; }//---------------如果起点和终点一样就退出方法\r\n\tconsole.log(data);\r\n\tif ((data.startTarget.x == data.endTarget.x && data.startTarget.y == data.endTarget.y) || data.endTarget.bat_obstacle) { return false; }//---第一次检测，起点和终点一样就退出方法\r\n\tlet openList = [];//---------------九宫格临时存放格子数组\r\n\tlet closeList = [];//--------------九宫格临时存放确认数组\r\n\tlet sureList = [];//---------------九宫格最终确认数组\r\n\tlet isSure_start = 0;//------------是否到达终点   0：不是   1：是\r\n\tlet isSure_end = 0;//--------------是否到达起点   0：不是   1：是\r\n\tlet minF = 0;//--------------------F值最小值\r\n\tlet minG = 0;//--------------------G值最小值\r\n\tvar tempEndTarget = null;//--------最后所选目标格子对象\r\n\tlet parent = {x: data.startTarget.x, y: data.startTarget.y, isStart: 1, G: 0, H:0, F:0};//-----------isStart: 起点的唯一标识\r\n\topenList.push(parent);\r\n\t//方向数组  也可用作判断格子九宫格里其余格子是否在战场内数组   id：判断方向的数值   direction：上下左右斜方向值\r\n\tlet directionList = [{y:0,x:1,direction:1},{y:-1,x:1,direction:2},{y:-1,x:0,direction:3},{y:-1,x:-1,direction:4},{y:0,x:-1,direction:5},{y:1,x:-1,direction:6},{y:1,x:0,direction:7},{y:1,x:1,direction:8}];\r\n\tdata.batBox.getChildByName(\"batBox_y\" + data.startTarget.y + \"_x\" + data.startTarget.x).setColor(cc.color(\"#008102\"));//-----测试阶段，上颜色标识用\r\n\tdata.batBox.getChildByName(\"batBox_y\" + data.endTarget.y + \"_x\" + data.endTarget.x).setColor(cc.color(\"#fff\"));//-----测试阶段，上颜色标识用\r\n\tif(data.endTarget.bat_hero.groupId == 2){//----------------获取敌人目标\r\n\t\ttempEndTarget = module.exports.getAttPos(data,directionList);\r\n\t}\r\n\tif(!tempEndTarget){//如没有获取到敌人目标，就读取传参进来的最终目标\r\n\t\ttempEndTarget = data.batBox.getChildByName(\"batBox_y\" + data.endTarget.y + \"_x\" + data.endTarget.x).getComponent(\"batBox_basic\");\r\n\t}\r\n\tif (data.startTarget.x == tempEndTarget.x && data.startTarget.y == tempEndTarget.y) { return false; }//---第二次检测，起点和终点一样就退出方法，因为可能上面的处理结果会把最终位置改变为路线起点\r\n\tfor (let j = 0; j < openList.length; j++) {\r\n\t\t//console.log(isSure_start);\r\n\t\tif (isSure_start == 1) { break; }//----------已到达终点，退出循环\r\n\t\t//console.log(j+\"——————————————————————————————————————————————————\");\r\n\t\t//console.log(parent,openList[j]);\r\n\t\tlet obsExList = [];//--------------障碍物上下左右格子的数组\r\n\t\tlet obsId_right = null;//----------当前障碍物格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_down = null;//-----------当前障碍物格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_left = null;//-----------当前障碍物格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_top = null;//------------当前障碍物格子的上侧格子--临时禁止加入临时数组\r\n    \tvar tempEnemyList = [];\r\n\t\tlet enemId_right = null;//----------当前敌人格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_down = null;//-----------当前敌人格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_left = null;//-----------当前敌人格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_top = null;//------------当前敌人格子的上侧格子--临时禁止加入临时数组\r\n\t\tfor (let i = 0; i < directionList.length; i++) {//------------------获取路线障碍物上下左右格子的数组\r\n\t\t\t//计算出九宫格内当前循环的格子是否在战场内  原理：利用格子的行列值进行运算，得出结果异常则不属于战场内格子\r\n    \t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n\t\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tobsId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tobsId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tobsId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tobsId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\tobsExList.push(obsId_right,obsId_down,obsId_left,obsId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tvar enemyList2 = [];\r\n    \t\t\tfor (var z = 0; z < data.hero_list.length; z++) {\r\n    \t\t\t\tif(data.hero_list[z].point == checkTarget.bat_hero.point && data.hero_list[z].groupId == 2){\r\n    \t\t\t\t\tenemyList2.push(data.hero_list[z]);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (enemyList2) {\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tenemId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tenemId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tenemId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tenemId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\ttempEnemyList.push(enemId_right,enemId_down,enemId_left,enemId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n\t\t}\r\n    \tfor (let i = 0; i < directionList.length; i++) {//------------------获取路线临时数组\r\n    \t\tlet isOpen = 0;//------------------是否已记录在临时数组标识   0：不是   1：是\r\n    \t\tlet isClose = 0;//-----------------是否已记录在确认数组标识   0：不是   1：是\r\n    \t\tlet isObstacle = 0;//--------------是否障碍物   0：不是   1：是\r\n    \t\tlet isObsEx = 0;//-----------------当前格子是否位于障碍物格子上下左右侧的格子位置上，用于判断是否处于斜格处理   0：不是   1：是\r\n    \t\tvar isEnemy = false;\r\n    \t\tvar isEnemy2 = 0;\r\n    \t\t//计算出九宫格内当前循环的格子  原理：利用格子的行列值进行运算，得出结果异常则不属于战场内格子\r\n    \t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\t\tvar enemyList2 = [];\r\n    \t\t\tfor (var z = 0; z < data.hero_list.length; z++) {\r\n    \t\t\t\tif(data.hero_list[z].point == checkTarget.bat_hero.point && data.hero_list[z].groupId == 2){\r\n    \t\t\t\t\tenemyList2.push(data.hero_list[z]);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tisObstacle = 1;\r\n    \t\t\t}else if(enemyList2.length != 0){\r\n    \t\t\t\tisEnemy = true;\r\n    \t\t\t}else{\r\n\t    \t\t\tfor (let x = 0; x < closeList.length; x++) {//------------------当前循环九宫格格子是否已记录在确认数组\r\n\t\t    \t\t\tif (checkTarget.x == closeList[x].x && checkTarget.y == closeList[x].y) {\r\n\t\t    \t\t\t\tisClose = 1;\r\n\t\t    \t\t\t\tbreak;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t\tfor (let x = 0; x < openList.length; x++) {//-------------------当前循环九宫格格子是否已记录在临时数组\r\n\t\t    \t\t\tif (checkTarget.x == openList[x].x && checkTarget.y == openList[x].y) {\r\n\t\t    \t\t\t\tisOpen = 1;\r\n\t\t    \t\t\t\tbreak;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t\tfor (let o = 0; o < obsExList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n    \t\t\t\t\tif (checkTarget.x == obsExList[o].x && checkTarget.y == obsExList[o].y) {\r\n\t    \t\t\t\t\tisObsEx = 1;\r\n\t    \t\t\t\t\tbreak;\r\n\t    \t\t\t\t}\r\n    \t\t\t\t}\r\n\t    \t\t\tfor (let o = 0; o < tempEnemyList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n    \t\t\t\t\tif (checkTarget.x == tempEnemyList[o].x && checkTarget.y == tempEnemyList[o].y) {\r\n\t    \t\t\t\t\tisEnemy2 = 1;\r\n\t    \t\t\t\t\tbreak;\r\n\t    \t\t\t\t}\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (isClose == 0 && isOpen == 0 && isObstacle == 0 && isObsEx == 0 && !isEnemy && isEnemy2 == 0) {//-------------如任何检查判断为未触发，则视为当前格子是新处理格子\r\n\t\t\t\t\tlet H_x = Math.abs(tempEndTarget.x - checkTarget.x);\r\n\t\t\t\t\tlet H_y = Math.abs(tempEndTarget.y - checkTarget.y);\r\n\t\t\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\t\t\tlet G;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(i == 0 || i == 2 || i == 4 || i == 6){\r\n\t\t\t\t\t\tG = 10 + parent.G;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tG = 14 + parent.G;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet item = {\r\n\t\t\t\t\t\tx: checkTarget.x,\r\n\t\t\t\t\t\ty: checkTarget.y,\r\n\t\t\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t\t\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t\t\t    \t\tF: G+H,\r\n\t\t\t    \t\tdirection: directionList[i].direction\r\n\t\t\t\t\t}\r\n\t\t\t        let label_G = new cc.Node();\r\n\t\t\t        label_G.addComponent(cc.Label);\r\n\t\t\t        label_G.getComponent(cc.Label).fontSize = 12\r\n\t\t\t        label_G.getComponent(cc.Label).string = (checkTarget.y + \"\" + checkTarget.x)+ \"，F：\"+(G+H)+  \"\\nG:\"+G+\"，H:\"+H;\r\n\t\t\t        tempCheckTarget.addChild(label_G);\r\n\t\t\t\t\topenList.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    \tif (openList[0].isStart == 1) {//-----------处理起点的首次增删数组操作\r\n    \t\tcloseList.push(openList[0]);\r\n\t\t\topenList.splice(0,1);\r\n\t\t\tj = -1;//-------------------------------初始化循环次数\r\n    \t}\r\n    \tfor (let i = 0; i < openList.length; i++) {//----------循环取F值最小值\r\n    \t\tif (openList[i] && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n    \t\t\tminF = openList[i];\r\n    \t\t}\r\n    \t\tif (minF.F > openList[i].F) {\r\n    \t\t\tminF = openList[i];\r\n    \t\t}\r\n    \t}\r\n    \t//console.log(openList,parent);\r\n    \tfor (let i = 0; i < openList.length; i++) {//----------依靠最新的F值最小值格子得出新的父节点\r\n    \t\tif (openList[i].F == minF.F) {\r\n    \t\t\tparent = openList[i];\r\n    \t\t\tcloseList.push(openList[i]);\r\n    \t\t\topenList.splice(i,1);\r\n    \t\t\tj = -1;//-------------------------------初始化循环次数\r\n    \t\t\tminF = 0;//-----------初始化F值最小值\r\n    \t\t}\r\n    \t}\r\n    \tif (parent.x == tempEndTarget.x && parent.y == tempEndTarget.y) {//---------------如果临时确认数组收录了终点，就退出循环\r\n\t\t\tisSure_start = 1;\r\n\t\t}\r\n\t}\r\n\t//console.log(closeList);\r\n\tfor (let j = 0; j < closeList.length; j++) {\r\n\t\tdata.batBox.getChildByName(\"batBox_y\" + closeList[j].y + \"_x\" + closeList[j].x).setColor(cc.color(\"#008102\"));//-----测试阶段，上颜色标识用\r\n\t}\r\n\tcloseList = closeList.reverse();\r\n\tsureList.push(parent);\r\n\t//计算最终路线    原理：从临时确认数组中反过来走到起点\r\n\tfor (let j = 0; j < closeList.length; j++) {\r\n\t\tif (isSure_end == 1) { break; }//----------已回到起点，退出循环\r\n\t\tlet obsExList = [];//--------------障碍物上下左右格子的数组\r\n\t\tlet obsId_right = null;//----------当前障碍物格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_down = null;//-----------当前障碍物格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_left = null;//-----------当前障碍物格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet obsId_top = null;//------------当前障碍物格子的上侧格子--临时禁止加入临时数组\r\n\t\tlet tempSureList = [];\r\n\t\t\r\n    \tvar tempEnemyList = [];\r\n\t\tlet enemId_right = null;//----------当前敌人格子的右侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_down = null;//-----------当前敌人格子的下侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_left = null;//-----------当前敌人格子的左侧格子--临时禁止加入临时数组\r\n\t\tlet enemId_top = null;//------------当前敌人格子的上侧格子--临时禁止加入临时数组\r\n\t\t//console.log(j+\"——————————————————————————————————————————————————\");\r\n\t\tfor (let i = 0; i < directionList.length; i++) {\r\n\t\t\t//获取当前循环的父节点格子  \r\n    \t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tobsId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tobsId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tobsId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tobsId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\tobsExList.push(obsId_right,obsId_down,obsId_left,obsId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n\t\t\tvar enemyList2 = [];\r\n\t\t\tfor (var z = 0; z < data.hero_list.length; z++) {\r\n\t\t\t\tif(data.hero_list[z].point == checkTarget.bat_hero.point && data.hero_list[z].groupId == 2){\r\n\t\t\t\t\tenemyList2.push(data.hero_list[z]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (enemyList2) {\r\n\t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n\t\t\t\t\tenemId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n\t\t\t\t\tenemId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n\t\t\t\t\tenemId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n\t\t\t\t\tenemId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n\t\t\t\t\ttempEnemyList.push(enemId_right,enemId_down,enemId_left,enemId_top);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < directionList.length; i++) {\r\n    \t\tlet isClose = 0;//-----------------是否已记录在确认数组标识   0：不是   1：是\r\n    \t\tlet isObstacle = 0;//--------------是否障碍物   0：不是   1：是\r\n    \t\tlet isObsEx = 0;//-----------------当前格子是否位于障碍物格子上下左右侧的格子位置上，用于判断是否处于斜格处理   0：不是   1：是\r\n\t\t\tvar isEnemy = false;\r\n    \t\tvar isEnemy2 = 0;\r\n\t\t\tlet tempCheckTarget = data.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n    \t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n    \t\t\t\tisObstacle = 1;\r\n    \t\t\t}else if(enemyList2.length != 0){\r\n    \t\t\t\tisEnemy = true;\r\n    \t\t\t}else{\r\n    \t\t\t\tfor (let x = 0; x < closeList.length; x++) {//------------------当前循环九宫格格子是否已记录在确认数组\r\n\t\t    \t\t\tif (checkTarget.x == closeList[x].x && checkTarget.y == closeList[x].y) {\r\n\t\t    \t\t\t\tfor (let o = 0; o < obsExList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t\t    \t\t\t\t\tif (checkTarget.x == obsExList[o].x && checkTarget.y == obsExList[o].y) {\r\n\t\t\t    \t\t\t\t\tisObsEx = 1;\r\n\t\t\t    \t\t\t\t\tbreak;\r\n\t\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\t}\r\n\t\t\t    \t\t\tfor (let o = 0; o < tempEnemyList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t\t    \t\t\t\t\tif (checkTarget.x == tempEnemyList[o].x && checkTarget.y == tempEnemyList[o].y) {\r\n\t\t\t    \t\t\t\t\tisEnemy2 = 1;\r\n\t\t\t    \t\t\t\t\tbreak;\r\n\t\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\t}\r\n\t\t    \t\t\t\tif (isObsEx == 0 && isEnemy2 == 0) {\r\n\t\t    \t\t\t\t\ttempSureList.push(closeList[x]);\r\n\t\t    \t\t\t\t}\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < tempSureList.length; i++) {//----------循环取F值最小值\r\n    \t\tif (tempSureList[i] && minG == 0) {//------------------------为了排除可能会遇到没G值的父格子，当存在的G值的循环才初始化\r\n    \t\t\tminG = tempSureList[i];\r\n    \t\t}\r\n    \t\tif (minG.G > tempSureList[i].G) {\r\n    \t\t\tminG = tempSureList[i];\r\n    \t\t}\r\n    \t}\r\n    \tfor (let i = 0; i < tempSureList.length; i++) {//----------依靠最新的G值最小值格子得出新的父节点\r\n    \t\tif (tempSureList[i].G == minG.G) {\r\n    \t\t\tparent = tempSureList[i];\r\n    \t\t\tsureList.push(tempSureList[i]);\r\n    \t\t\tminG = 0;//-----------初始化G值最小值\r\n    \t\t}\r\n    \t}\r\n\t\tif (parent.x == data.startTarget.x && parent.y == data.startTarget.y) {//---------------如果临时确认数组收录了起点，就退出循环\r\n\t\t\tisSure_end = 1;\r\n\t\t}\r\n\t}\r\n\tfor (let j = 0; j < sureList.length; j++) {\r\n\t\tdata.batBox.getChildByName(\"batBox_y\" + sureList[j].y + \"_x\" + sureList[j].x).setColor(cc.color(\"#bbb\"));//-----测试阶段，上颜色标识用\r\n\t}\r\n\t//console.log(sureList,closeList);\r\n\treturn sureList.reverse();\r\n};\r\n\r\n//获取最近敌人  \r\nmodule.exports.getNearEnemy = function(data){\r\n\tlet tempList = [];\r\n\tlet enemyList = [];\r\n\tvar minF = 0;\r\n\tfor (let i = 0; i < data.dataList.length; i++) {\r\n\t\tif (data.dataList[i].groupId == 2) {\r\n\t    \tlet H_x = Math.abs(data.dataList[i].x - data.target.x);\r\n\t\t\tlet H_y = Math.abs(data.dataList[i].y - data.target.y);\r\n\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\tlet G = 0;\r\n\t\t\tlet item = {\r\n\t\t\t\tx: data.dataList[i].x,\r\n\t\t\t\ty: data.dataList[i].y,\r\n\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t    \t\tF: G+H\r\n\t\t\t}\r\n\t\t\ttempList.push(item);\r\n\t\t\tenemyList.push(data.dataList[i]);\r\n\t\t}\r\n\t}\r\n\tfor (let i = 0; i < tempList.length; i++) {\r\n\t\tif (tempList[i].F && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n\t\t\tminF = tempList[i];\r\n\t\t}\r\n\t\tif (minF.F > tempList[i].F) {//根据F值取最近敌人\r\n\t\t\tminF = tempList[i];\r\n\t\t}\r\n\t}\r\n\tvar send = data.batBox.getChildByName(\"batBox_y\" + minF.y + \"_x\" + minF.x).getComponent(\"batBox_basic\");\r\n\treturn send;\r\n};"]}