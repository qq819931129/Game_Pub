{"version":3,"sources":["..\\..\\..\\..\\assets\\js/assets\\js\\battle_Control.js"],"names":["js_dataControl","require","GroupName","cc","Class","extends","Component","properties","canvas","Node","itemPrefab","default","type","Prefab","choosePrefab","Prefab_obstacle_01","Prefab_obstacle_02","Prefab_obstacle_03","Prefab_hero_01","Prefab_hero_02","Prefab_tempColl_touch","background","batBox","other","enemy","icon_arrow","followSpeed","onLoad","battleInit_basic","checkId","personPrefabNew","batlist","hero_list","obstacle_list","hero_route_list","state","name","list","lastId","boxIndex","hero_route_ok_list","isState","isOOOK","indexNum","getcheckId","bat","children","i","length","push","getComponent","batBoxName","console","log","perfabPool","init","battleInit_obstacle","otherList","y","x","point","j","bat_obstacle","battleInit_obstacle_detail","setObstacle","battleInit_hero","tempList","otherList_lock_id","otherList_lock_point","self","enemyList","id","pop","bat_hero","battleInit_hero_detail","updateHeroList","heroRouteOkList","getChildByName","on","EventType","TOUCH_START","event","selfItem","self_x","getLocation","self_y","heroList","route","slice","groupId","checkRoute","routeDirection","getNearEnemy","stopMove","currentBox","boxItem","temp","box_current","item","instantiate","addChild","setPosition","currentBox_destroy","child","destroy","box","itemList","createEnemy","group","empty","hero_basic","heroName","isDie","lastRouteTarget","tempColl_touch","TOUCH_MOVE","isCenter","parent","enemyList2","z","matchOKHeroRoute","TOUCH_CANCEL","touchStop","TOUCH_END","update","dt","targetBoxItem","end","v2","start","position","direction","pNormalize","pSub","pAdd","pMult","sum","pDistance","splice","repeatList","noRepeatList","ok_list","repeatIndex","repeatIndexItem","noRepeatIndex","repeat","temp_okItem","o","startTarget","endTarget","openList","closeList","sureList","isSure_start","isSure_end","minF","minG","isStart","G","H","F","directionList","setColor","color","tempEndTarget","obsExList","obsId_right","obsId_down","obsId_left","obsId_top","tempEnemyList","enemId_right","enemId_down","enemId_left","enemId_top","tempCheckTarget","checkTarget","isOpen","isClose","isObstacle","isObsEx","isEnemy","isEnemy2","H_x","Math","abs","H_y","label_G","addComponent","Label","fontSize","string","reverse","tempSureList","target","dataList"],"mappings":"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","file":"battle_Control.js","sourceRoot":"..\\..\\..\\..\\assets\\js","sourcesContent":["﻿//导入外部脚本\r\nvar js_dataControl = require(\"dataControl\");\r\nconst GroupName = require('Types').GroupName;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        canvas: cc.Node,\r\n        itemPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        choosePrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_obstacle_01: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_obstacle_02: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_obstacle_03: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_hero_01: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_hero_02: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_tempColl_touch: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        background: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        batBox: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        other: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        enemy: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        icon_arrow: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        followSpeed: 1\r\n    },\r\n    onLoad: function () {\r\n    \t\r\n    \t\r\n    },\r\n    //生成第一层战场数组-基础数据  (关卡id，预存资源对象)\r\n    battleInit_basic: function(checkId,personPrefabNew) {\r\n\t\t//初始化部分数组\r\n    \tthis.batlist = [];//-----------------------------战场基础层\r\n    \tthis.hero_list = [];//---------------------------战场英雄存储\r\n    \tthis.obstacle_list = [];//-----------------------战场障碍物存储\r\n    \tthis.hero_route_list = [];//---------------------英雄路线数据\r\n    \tthis.hero_route_list.state = 0;//----------------英雄路线——是否可启用 0=不可用，1=可用\r\n    \tthis.hero_route_list.name = null;//--------------英雄生成名字\r\n    \tthis.hero_route_list.list = [];//----------------英雄路线——存储路线数组\r\n    \tthis.hero_route_list.lastId = -1;//--------------英雄路线——记录上一次格子的名字  -1:初始     加入临时数组时进行赋值\r\n    \tthis.hero_route_list.boxIndex = -1;//------------英雄路线——记录格子下标   -1:初始   \r\n    \t\r\n    \tthis.hero_route_ok_list = [];//---------------------中心点英雄路线数据\r\n    \tthis.hero_route_ok_list.state = 0;//----------------中心点英雄路线——是否可启用 0=不可用，1=可用\r\n    \tthis.hero_route_ok_list.name = null;//--------------中心点英雄生成名字\r\n    \tthis.hero_route_ok_list.list = [];//----------------中心点英雄路线——存储路线数组\r\n    \tthis.hero_route_ok_list.lastId = -1;//--------------中心点英雄路线——记录上一次格子的名字  -1:初始     加入确认数组时进行赋值\r\n    \t\r\n    \tthis.isState = 0;\r\n    \tthis.isOOOK = 1;\r\n    \tthis.indexNum = 0;\r\n    \t\r\n    \tthis.checkId = js_dataControl.getcheckId();//-------获取关卡id\r\n\t\tvar bat = this.batBox.children;\r\n\t\tfor (let i = 0; i < bat.length; i++) {\r\n\t\t\tthis.batlist.push(bat[i].getComponent(\"batBox_basic\"));\r\n\t\t\tthis.batlist[i].batBoxName = bat[i].name;\r\n\t\t}\r\n\t\tconsole.log(this.batlist);\r\n        this.perfabPool = this.getComponent(\"prefabPool\");\r\n        this.perfabPool.init();\r\n\t\tthis.battleInit_obstacle(this.checkId,personPrefabNew);\r\n    },\r\n    //生成第二层战场数组-障碍物   (关卡id)\r\n    battleInit_obstacle: function(checkId,personPrefabNew){\r\n    \t//关卡序列\r\n    \tif (checkId == 1) {\r\n    \t\tvar otherList = [{y: 0,x: 4,point: 1},{y: 2,x: 4,point: 2},{y: 1,x: 4,point: 3},{y: 1,x: 6,point: 1},{y: 2,x: 7,point: 1}];\r\n    \t}\r\n    \tif (checkId == 2) {\r\n    \t\tvar otherList = [{y: 0,x: 4,point: 1},{y: 2,x: 4,point: 2},{y: 1,x: 4,point: 3}];\r\n    \t}\r\n    \tfor (let i = 0; i < otherList.length; i++) {//-----匹配战场数组\r\n    \t\tfor (let j = 0; j < this.batlist.length; j++) {//--------战场需要遍历50次，所以用batlist，而不用专门获取的batBox.getChildByName\r\n\t        \tif (this.batlist[j].x == otherList[i].x && this.batlist[j].y == otherList[i].y) {\r\n\t        \t\tthis.batlist[j].bat_obstacle = otherList[i].point;\r\n\t        \t\tthis.battleInit_obstacle_detail(otherList[i].point,this.batlist[j]);\r\n\t        \t}\r\n    \t\t}\r\n    \t}\r\n    \tconsole.log(this.obstacle_list);\r\n    \tjs_dataControl.setObstacle(this.obstacle_list);\r\n    \tthis.battleInit_hero(this.checkId,personPrefabNew);\r\n    },\r\n    //生成第三层战场数组-英雄   (关卡id)\r\n    battleInit_hero: function(checkId,personPrefabNew){\r\n    \t// let tempList = [{y: 4,x: 2,point: 6},{y: 3,x: 2,point: 7},{y: 2,x: 2,point: 8},{y: 1,x: 2,point: 9},{y: 0,x: 2,point: 10},{y: 4,x: 1,point: 11}];//----我方阵容-测试用的\r\n\t\tlet tempList = [{y: 4,x: 2,point: 6}];\r\n\t\tlet otherList = [];//-----------------------我方阵容\r\n    \tlet otherList_lock_id = 0;//----------------我方阵容——位置是否有重复英雄导入标识  0:是，1:不是\r\n    \tlet otherList_lock_point = 0;//-------------我方阵容——不同年龄系列英雄是否重复导入标识  0:是，1:不是\r\n    \tvar self = this;\r\n    \t//let fulinList = [{id: \"01\",point: 1},{id: \"02\",point: 2},{id: \"03\",point: 3}];//------符灵技能栏\r\n    \tif (checkId == 1) {\r\n\t\t\t//var enemyList = [{y: 4,x: 9,point: 1},{y: 2,x: 9,point: 2},{y: 0,x: 9,point: 3},{y: 3,x: 7,point: 4},{y: 1,x: 7,point: 5}];//----敌方阵容\r\n\t\t\tvar enemyList = [{y: 3,x: 8,point: 1}];\r\n    \t}\r\n    \tif (checkId == 2) {\r\n    \t\tvar enemyList = [{y: 3,x: 9,point: 1},{y: 1,x: 9,point: 2},{y: 0,x: 9,point: 3},{y: 0,x: 7,point: 4},{y: 1,x: 7,point: 5}];//----敌方阵容\r\n    \t}\r\n    \tfor (let i = 0; i < tempList.length; i++) {\r\n    \t\t//我方阵容区域内\r\n    \t\tif (tempList[i].id == \"00\" || tempList[i].id == \"10\" || tempList[i].id == \"20\" || tempList[i].id == \"30\" || tempList[i].id == \"40\"\r\n    \t\t || tempList[i].id == \"01\" || tempList[i].id == \"11\" || tempList[i].id == \"21\" || tempList[i].id == \"31\" || tempList[i].id == \"41\"\r\n    \t\t || tempList[i].id == \"02\" || tempList[i].id == \"12\" || tempList[i].id == \"22\" || tempList[i].id == \"32\" || tempList[i].id == \"42\") {\r\n    \t\t \tif (otherList.length < 5) {//----------------------------不超出5个英雄选择\r\n    \t\t\t\tfor (let j = 0; j < otherList.length; j++) {\r\n\t    \t\t \t\tif (otherList[j].x == tempList[i].x && otherList[j].y == tempList[i].y) {//-------发现已有英雄的位置上再放英雄，标识此次操作不加入阵容数组\r\n\t    \t\t \t\t\totherList_lock_id = 1;\r\n\t    \t\t \t\t}\r\n\t    \t\t \t\tif (otherList[j].point == tempList[i].point) {//---------发现放了不同年龄系列英雄，一个英雄分不同年龄阶段的卡牌\r\n    \t\t \t\t\t\totherList_lock_point = 1;\r\n    \t\t \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n    \t\t}\r\n    \t\tif (otherList.length < 5) {//----------------------------不超出5个英雄选择\r\n\t    \t\tif (otherList_lock_id == 0 && otherList_lock_point == 0) {//------标识们一致允许加入才能增加\r\n\t    \t\t\totherList.push(tempList[i]);\r\n\t    \t\t}\r\n\t    \t\tif (otherList_lock_id == 1 || otherList_lock_point == 1) {//------标识们一致允许加入才能增加\r\n\t    \t\t\totherList.pop();\r\n\t    \t\t\totherList.push(tempList[i]);\r\n\t    \t\t}\r\n    \t\t}\r\n    \t\t//初始化临时用的标识值\r\n    \t\totherList_lock_id = 0;\r\n    \t\totherList_lock_point = 0;\r\n\t\t}\r\n\t\t\r\n    \tfor (let i = 0; i < otherList.length; i++) {//-----我方英雄导入战场\r\n    \t\tfor (let j = 0; j < this.batlist.length; j++) {//--------战场需要遍历50次，所以用batlist，而不用专门获取的batBox.getChildByName\r\n\t        \tif (this.batlist[j].x == otherList[i].x && this.batlist[j].y == otherList[i].y) {\r\n\t        \t\tthis.batlist[j].bat_hero = otherList[i].point;\r\n\t        \t\tthis.battleInit_hero_detail(otherList[i].point,this.batlist[j],1,personPrefabNew);\r\n\t        \t}\r\n    \t\t}\r\n    \t}\r\n    \tfor (let i = 0; i < enemyList.length; i++) {//-----敌方英雄导入战场\r\n    \t\tfor (let j = 0; j < this.batlist.length; j++) {//--------战场需要遍历50次，所以用batlist，而不用专门获取的batBox.getChildByName\r\n\t        \tif (this.batlist[j].x == enemyList[i].x && this.batlist[j].y == enemyList[i].y) {\r\n\t        \t\tthis.batlist[j].bat_hero = enemyList[i].point;\r\n\t        \t\tthis.battleInit_hero_detail(enemyList[i].point,this.batlist[j],2,personPrefabNew);\r\n\t        \t}\r\n    \t\t}\r\n    \t}\r\n    \tjs_dataControl.updateHeroList(this.hero_list);\r\n\t\tvar heroRouteOkList = this.hero_route_ok_list;\r\n    \tthis.background.getChildByName(\"stopAllMove\").on(cc.Node.EventType.TOUCH_START, function ( event ) {\r\n\t\t\tlet selfItem = this;\r\n\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\tlet heroList = self.hero_list;\r\n\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\theroList[j].route = heroList[j].route.slice(0,heroList[j].indexNum+1);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.background.getChildByName(\"goAllMove\").on(cc.Node.EventType.TOUCH_START, function ( event ) {\r\n\t\t\tlet selfItem = this;\r\n\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\tlet heroList = self.hero_list;\r\n\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\tif (heroList[j].groupId == 1) {\r\n\t\t\t\t//if (heroList[j].heroName == \"hero_6\") {\r\n\t\t\t\t\tlet checkRoute = self.routeDirection(heroList[j],self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t\t\theroList[j].route = checkRoute;\r\n\t\t\t\t\theroList[j].state = 11;\r\n\t\t\t\t\theroList[j].indexNum = 0;\r\n\t\t\t\t\t//self.matchOKHeroRoute(heroList[j].name,self.getNearEnemy(heroList[j],heroList));//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t\tconsole.log(heroList[j],checkRoute,self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n    },\r\n    stopMove:function (point) {\r\n    \tvar self = this;\r\n    \tlet heroList = self.hero_list;\r\n\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\tif (heroList[j].point == point) {\r\n\t\t\t//if (heroList[j].heroName == \"hero_6\") {\r\n\t\t\t\tlet checkRoute = self.routeDirection(heroList[j],self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t\theroList[j].route = checkRoute;\r\n\t\t\t\theroList[j].state = 11;\r\n\t\t\t\theroList[j].indexNum = 0;\r\n\t\t\t\t//lf.matchOKHeroRoute(heroList[j].name,self.getNearEnemy(heroList[j],heroList));//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t//console.log(heroList[j],checkRoute,self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n    },\r\n    //选取格子高亮   (格子对象)\r\n    currentBox: function(boxItem){\r\n    \tvar temp = this.batBox.getChildByName(\"batBox_y\" + boxItem.y + \"_x\" + boxItem.x);\r\n    \t//console.log(temp.getComponent(\"batBox_basic\").box_current,temp.getComponent(\"batBox_basic\"));\r\n    \tif(temp.getComponent(\"batBox_basic\").box_current == 0){//------------------------------防止重复加载同一个格子高亮导致出现异常bug情况\r\n\t\t\ttemp.getComponent(\"batBox_basic\").box_current = 1;//-------------------------------高亮选择到的格子\r\n\t    \tlet item = cc.instantiate(this.icon_arrow); \r\n\t\t\ttemp.addChild(item);\r\n\t\t\titem.setPosition(boxItem.x,boxItem.y);\r\n\t    \titem.name = \"currentBox\";\r\n    \t}\r\n    },\r\n    //销毁高亮资源   (格子对象)\r\n    currentBox_destroy: function(boxItem){\r\n\t\tthis.batBox.getChildByName(\"batBox_y\" + boxItem.y + \"_x\" + boxItem.x).getComponent(\"batBox_basic\").box_current = 0;//----------------------清除高亮记录\r\n\t\tlet child = this.batBox.getChildByName(\"batBox_y\" + boxItem.y + \"_x\" + boxItem.x).getChildByName(\"currentBox\");\r\n\t\tif (child) { child.destroy(); }//--------------------------------------------------------------销毁高亮资源\r\n    },\r\n    //障碍物具体参数数组   (障碍物编号，格子对象)\r\n    battleInit_obstacle_detail: function(point,box){\r\n    \tif (point == 1) { var item = cc.instantiate(this.Prefab_obstacle_01); }\r\n    \tif (point == 2) { var item = cc.instantiate(this.Prefab_obstacle_02); }\r\n    \tif (point == 3) { var item = cc.instantiate(this.Prefab_obstacle_03); }\r\n    \tthis.batBox.getChildByName(\"batBox_y\" + box.y + \"_x\" + box.x).addChild(item);\r\n    \titem.setPosition(0,0);\r\n    \titem.name = \"point_\" + point;\r\n    \tvar itemList = {\r\n    \t\tx\t\t: box.x,\t\t\t\t//障碍物当前所处x轴\r\n    \t\ty\t\t: box.y,\t\t\t\t//障碍物当前所处y轴\r\n    \t}\r\n    \tthis.obstacle_list.push(itemList);\r\n    \t\r\n    },\r\n    //英雄具体参数数组   (英雄编号，格子对象，敌我英雄标识id: 1=我方   2=敌方)\r\n    battleInit_hero_detail: function(point,box,groupId,personPrefabNew){\r\n    \tif (point == 1) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 2) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 3) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 4) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 5) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 6) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 7) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 8) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 9) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 10) { var item = this.perfabPool.createEnemy(); }\r\n\t\tif (point == 11) { var item = this.perfabPool.createEnemy(); }\r\n\t\tif(groupId == 1){\r\n\t\t\titem.getComponent('person').group = GroupName.other\r\n\t\t\tthis.other.addChild(item);\r\n\t\t}\r\n\t\tif(groupId == 2){\r\n\t\t\titem.getComponent('person').group = GroupName.empty;\r\n\t\t\tthis.enemy.addChild(item);\r\n\t\t}\r\n\t\tvar x = this.batBox.getChildByName(\"batBox_y\" + box.y + \"_x\" + box.x).x;\r\n\t\tvar y = this.batBox.getChildByName(\"batBox_y\" + box.y + \"_x\" + box.x).y;\r\n    \titem.setPosition(x,y);\r\n    \titem.name = \"hero_\" + point;\r\n    \tif(groupId == 1){\r\n\t\t\tvar hero_basic = this.other.getChildByName(item.name).getComponent(\"person\");\r\n\t    \thero_basic.groupId = groupId;\r\n\t    \thero_basic.heroName = item.name;\r\n\t    \thero_basic.x = box.x;\r\n\t    \thero_basic.y = box.y;\r\n\t    \thero_basic.point = point;\r\n    \t}\r\n    \tif(groupId == 2){\r\n\t\t\tvar hero_basic = this.enemy.getChildByName(item.name).getComponent(\"person\");\r\n\t    \thero_basic.groupId = groupId;\r\n\t    \thero_basic.heroName = item.name;\r\n\t    \thero_basic.x = box.x;\r\n\t    \thero_basic.y = box.y;\r\n\t    \thero_basic.point = point;\r\n    \t}\r\n    \tlet itemList = {\r\n    \t\tgroupId : groupId,\t\t\t\t//英雄敌我阵容标识\r\n    \t\theroName: item.name,\t\t\t//英雄预存资源生成名称\r\n    \t\tx\t\t: box.x,\t\t\t\t//英雄当前所处x轴\r\n    \t\ty\t\t: box.y,\t\t\t\t//英雄当前所处y轴\r\n    \t\tpoint\t: point,\t\t\t\t//英雄标记  纪录具体是哪个英雄\r\n    \t\tindexNum: 0,\t\t\t\t\t//英雄移动路线的当前到达位置，就是说数组里的第几个位置\r\n    \t\troute\t: [],\t\t\t\t\t//英雄移动路线   状态切换为移动时，赋值路线\r\n\t\t\tstate\t: 10,\t\t\t\t\t//英雄状态   10：待命，11：移动\r\n\t\t\tisDie   : 1\t\t\t\t\t\t//死亡标识   0：死亡，1:未死亡\r\n    \t}\r\n    \tthis.hero_list.push(itemList);\r\n    \tvar self = this;\r\n\t\tvar heroRouteOkList = this.hero_route_ok_list;\r\n\t\tvar lastRouteTarget = null;//-------------------用作碰触到障碍物后保留前一个格子对象\r\n\t\tif(groupId == 1){\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_START, function ( event ) {\r\n\t\t\t\tlet selfItem = this;\r\n\t\t\t\t//console.log(selfItem);\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\tif (self.background.getChildByName(\"tempColl_touch\")) { self.background.getChildByName(\"tempColl_touch\").destroy();}//--------销毁之前生成的临时路线碰触点 \r\n\t\t\t\t//---生成临时路线碰触点   如果不重新生成，会出现触碰点一直碰着相同格子没反应的问题，例如不断触碰起点，碰撞系统好像如果不离开碰触体，就不会重新算碰撞到\r\n\t\t\t\tlet tempColl_touch = cc.instantiate(self.Prefab_tempColl_touch);\r\n\t\t\t\tself.background.addChild(tempColl_touch);\r\n\t\t\t\ttempColl_touch.setPosition(self_x,self_y);\r\n\t\t\t\tself.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem = null;//---初始化碰撞点上的格子对象\r\n\t\t    \t/*if (heroRouteOkList.list.length != 0) {\r\n\t\t\t\t\tlet heroList = self.hero_list;\r\n\t\t\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\t\t\tif(self.hero_list[j].heroName == selfItem.name){//--------------找出赋值英雄移动数组\r\n\t\t\t\t\t\t\tself.hero_list[j].state = 10;//------------------------------------英雄状态切换为：移动\r\n\t\t\t\t\t\t\tself.hero_list[j].route = heroRouteOkList.list;//------------------赋值路线\r\n\t\t\t\t\t\t\tself.hero_list[j].indexNum = 0;//----------------------------------初始化移动路线的到达位置\r\n\t\t\t\t\t\t\theroRouteOkList.list = [];//---------------------------临时路线清空\r\n\t\t\t\t\t\t\theroRouteOkList.state = 0;//---------------------------临时路线状态改为不启用\r\n\t\t\t\t\t\t\theroRouteOkList.name = null;//-------------------------临时路线的英雄名清除\r\n\t\t\t\t\t\t\theroRouteOkList.lastId = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t});\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_MOVE, function ( event ) {\r\n\t\t\t\tlet selfItem = this;\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\tself.background.getChildByName(\"tempColl_touch\").x = self_x;//-------实时更改临时路线碰触点位置\r\n\t\t\t\tself.background.getChildByName(\"tempColl_touch\").y = self_y;\r\n\t\t\t\tlet isCenter = 0;\r\n\t\t\t\tvar boxItem = self.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem;\r\n\t\t\t\tif (boxItem) {\r\n\t\t\t\t\tif (boxItem.name == \"batBox_Center\") {\r\n\t\t\t\t\t\tboxItem = boxItem.parent.getComponent(\"batBox_basic\");\r\n\t\t\t\t\t\tisCenter = 1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tboxItem = boxItem.getComponent(\"batBox_basic\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar enemyList2 = [];\r\n\t    \t\t\tfor (var z = 0; z < self.hero_list.length; z++) {\r\n\t    \t\t\t\tif(self.hero_list[z].point == boxItem.bat_hero && self.hero_list[z].groupId == 2){\r\n\t    \t\t\t\t\tenemyList2.push(self.hero_list[z]);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\t\r\n\t\t\t\t\tif (!boxItem.bat_obstacle && enemyList2.length == 0) {\r\n\t\t\t\t\t\tif (heroRouteOkList.lastId == -1) {//--------------------------------还没记录到上一次的格子名字，证明是在获取第一次路线信息\r\n\t\t\t\t\t\t\tfor (let i = 0; i < self.hero_list.length; i++) {//------------循环英雄数组\r\n\t\t\t\t\t\t\t\tif (self.hero_list[i].heroName == selfItem.name) {//----------匹配当前点击的格子上是否存在英雄\r\n\t\t\t\t\t\t\t\t\tself.matchOKHeroRoute(selfItem.name,boxItem);//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif (isCenter == 1) {\r\n\t\t\t\t\t\t\t\tif(heroRouteOkList.lastId != boxItem.batBoxName){//----------当前触碰的格子不是上一次记录的格子（此判断为了防止不断触碰相同格子一直执行以下方法）\r\n\t\t\t\t\t\t\t\t\tself.matchOKHeroRoute(heroRouteOkList.name,boxItem);//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_CANCEL, function ( event ) {\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\t//console.log(heroRouteOkList.list,heroRouteOkList.name);\r\n\t\t\t\tvar boxItem = self.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem;\r\n\t\t\t\tif (boxItem.name == \"batBox_Center\") {\r\n\t\t\t\t\tboxItem = boxItem.parent.getComponent(\"batBox_basic\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tboxItem = boxItem.getComponent(\"batBox_basic\");\r\n\t\t\t\t}\r\n\t\t\t\tself.matchOKHeroRoute(heroRouteOkList.name,boxItem);//-------传参英雄名和格子对象给确认数组，有时越墙后也能填补后续路线\r\n\t\t\t\tself.touchStop();\r\n\t\t\t});\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_END, function ( event ) {\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\tvar boxItem = self.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem;\r\n\t\t\t\tif (boxItem.name == \"batBox_Center\") {\r\n\t\t\t\t\tboxItem = boxItem.parent.getComponent(\"batBox_basic\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tboxItem = boxItem.getComponent(\"batBox_basic\");\r\n\t\t\t\t}\r\n\t\t\t\tself.matchOKHeroRoute(heroRouteOkList.name,boxItem);//-------传参英雄名和格子对象给确认数组，有时越墙后也能填补后续路线\r\n\t\t\t\tself.touchStop();\r\n\t\t\t});\r\n\t\t}\r\n    },\r\n    update: function (dt) {\r\n    \tlet self = this;\r\n\t\tlet heroList = self.hero_list;\r\n\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\tif(heroList[j].state == 11){//--------------找出赋值英雄移动数组\r\n\t\t\t\tlet targetBoxItem = self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum].y + \"_x\" + heroList[j].route[heroList[j].indexNum].x);\r\n\t\t\t\tlet end = cc.v2(targetBoxItem.x,targetBoxItem.y);//------------------------获取下个目标xy\r\n\t\t\t\tlet start = self.other.getChildByName(heroList[j].heroName).position;//-------------获取目标当前xy\r\n\t\t\t\tlet direction = cc.pNormalize(cc.pSub(end, start));//------------------------先获取俩个向量的差，然后返回一个长度为1的标准化后的向量\r\n\t\t\t\tlet item = cc.pAdd(start, cc.pMult(direction, self.followSpeed ));//----缩放上面的标准化向量，然后把初始目标xy加上缩放的向量\r\n\t\t\t\tself.other.getChildByName(heroList[j].heroName).setPosition(item);//----------------更新目标位置\r\n\t\t\t\tlet sum = cc.pDistance(start, end);\r\n\t\t\t\tif (sum <= 1 && heroList[j].indexNum < heroList[j].route.length) {//-----------------向量测出英雄和下一个格子中心在1范围内就进入下一个路线\r\n\t\t\t\t\theroList[j].x = targetBoxItem.getComponent(\"batBox_basic\").x;//----------------------------------------英雄当前x轴修改\r\n\t\t\t\t\theroList[j].y = targetBoxItem.getComponent(\"batBox_basic\").y;//----------------------------------------英雄当前y轴修改\r\n\t\t\t\t\tjs_dataControl.updateHeroList(heroList);//----------------更新存储数据层js的英雄详细数组\r\n\t\t\t\t\t//英雄路线移动完毕后执行以下方法\r\n\t\t\t\t\tif ((heroList[j].indexNum+1) == heroList[j].route.length) {\r\n\t\t\t\t\t\tself.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum].y + \"_x\" + heroList[j].route[heroList[j].indexNum].x).bat_hero = heroList[j].point;//------------------------更改第一层战场格子上的英雄标记\r\n\t\t\t\t\t\theroList[j].state = 10;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tself.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum].y + \"_x\" + heroList[j].route[heroList[j].indexNum].x).bat_hero = heroList[j].point;//------------------------更改第一层战场格子上的英雄标记\r\n\t\t\t\t\t}\r\n\t\t\t\t\theroList[j].indexNum++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n    //鼠标或手指碰触结束   (路线确认数组)\r\n    touchStop: function(){\r\n    \tvar self = this;\r\n\t\tvar heroRouteOkList = this.hero_route_ok_list;\r\n\t\tfor (let z = 0; z < heroRouteOkList.list.length; z++) {\r\n\t\t\tself.currentBox_destroy(heroRouteOkList.list[z]);//--------------------------销毁高亮资源方法\r\n\t\t}\r\n    \tif (heroRouteOkList.list.length != 0) {\r\n\t\t\tlet heroList = self.hero_list.length;\r\n\t\t\tfor (let j = 0; j < heroList; j++) {//---------匹配英雄表\r\n\t\t\t\tif(self.hero_list[j].heroName == heroRouteOkList.name){//--------------找出赋值英雄移动数组\r\n\t\t\t\t\tself.hero_list[j].state = 11;//------------------------------------英雄状态切换为：移动\r\n\t\t\t\t\tself.hero_list[j].route = heroRouteOkList.list;//------------------赋值路线\r\n\t\t\t\t\tself.hero_list[j].indexNum = 0;//----------------------------------初始化移动路线的到达位置\r\n\t\t\t\t\theroRouteOkList.list = [];//---------------------------临时路线清空\r\n\t\t\t\t\theroRouteOkList.state = 0;//---------------------------临时路线状态改为不启用\r\n\t\t\t\t\theroRouteOkList.name = null;//-------------------------临时路线的英雄名清除\r\n\t\t\t\t\theroRouteOkList.lastId = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n    //检测触碰到的英雄-确认   (英雄名,格子对象)\r\n    matchOKHeroRoute: function(heroName,boxItem){\r\n    \tlet heroRouteOkList = this.hero_route_ok_list;\r\n\t\theroRouteOkList.state = 1;//----------------------------------临时路线记录数组启用\r\n\t\theroRouteOkList.name = heroName;//----------------------------临时路线数组，记录英雄标识\r\n\t\theroRouteOkList.lastId = boxItem.batBoxName;//----------------赋值当前格子的名字\r\n\t\tif (heroRouteOkList.list.length == 0) {//-----------------------------已选格子不再执行以下方法\r\n    \t\tlet item = {\r\n    \t\t\tx\t: boxItem.x,\r\n    \t\t\ty\t: boxItem.y\r\n    \t\t}\r\n    \t\theroRouteOkList.list.push(item);\r\n\t\t\tthis.currentBox(boxItem);\r\n\t\t}else{\r\n\t\t\tlet z = -1;//--------------获取确认数组的最后一个格子id\r\n\t\t\t//---获取A*填充数组，条件是当前确认数组最后一个格子对象和最新所选到的格子对象，用作处理可能越几格的路线填充\r\n\t\t\tlet checkRoute = this.routeDirection(heroRouteOkList.list[heroRouteOkList.list.length-1],boxItem);\r\n\t\t\tconsole.log(checkRoute,heroRouteOkList.list);\r\n\t\t\tif (checkRoute) { checkRoute.splice(0,1); }//-----------清空A*返回的路线数组的第一个格子路线，因为会和旧路线最后一个格子重复了\r\n\t\t\tlet repeatList = [];//-----------------存储A*填充数组里和当前确认数组重复的格子对象，用作出现路线重复回滚\r\n\t\t\tlet noRepeatList = [];//---------------存储A*填充数组里不和当前确认数组不重复的格子对象，用作出现路线重复回滚时，可以继续填充路线\r\n\t\t\tlet ok_list = [];//--------------------临时存储确认数组的list\r\n\t\t\tlet repeatIndex = -1;//----------------记录A*填充数组最后一个格子下标   -1:初始   \r\n\t\t\tlet repeatIndexItem = null;//----------记录A*填充数组最后一个格子对象   -1:初始   \r\n\t\t\tlet noRepeatIndex = -1;//--------------记录回滚点是否触发的标识   1:是，2:否  \r\n\t\t\tfor (let i = 0; i < checkRoute.length; i++) {\r\n\t\t\t\tfor (let j = 0; j < heroRouteOkList.list.length; j++) {\r\n\t\t\t\t\tif (heroRouteOkList.list[j].x == checkRoute[i].x && heroRouteOkList.list[j].y == checkRoute[i].y) {\r\n\t\t\t\t\t\trepeatList.push(checkRoute[i]);\r\n\t\t\t\t\t\tcheckRoute[i].repeat = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\theroRouteOkList.list.push(checkRoute[i]);\r\n\t\t\t\tthis.currentBox(this.batBox.getChildByName(\"batBox_y\" + checkRoute[i].y + \"_x\" + checkRoute[i].x).getComponent(\"batBox_basic\"));\r\n\t\t\t}\r\n\t\t\tconsole.log(repeatList,heroRouteOkList.list);\r\n\t\t\tif (repeatList.length > 0) {//-----------A*填充数组存在2个值时代表越墙或者终点不只在起点九宫格\r\n\t\t\t\tfor (let x = 0; x < heroRouteOkList.list.length; x++) {\r\n\t\t\t\t\tif (repeatIndex == -1) {//-----------------标识不存在时\r\n\t\t\t\t\t\tif (repeatList[repeatList.length-1].x == heroRouteOkList.list[x].x && repeatList[repeatList.length-1].y == heroRouteOkList.list[x].y) {//------当前格子id等于确认数组id时\r\n\t\t\t\t\t\t\trepeatIndex = x;//-----------------赋值标识为当前循环下标\r\n\t\t\t\t\t\t\trepeatIndexItem = this.batBox.getChildByName(\"batBox_y\" + heroRouteOkList.list[x].y + \"_x\" + heroRouteOkList.list[x].x).getComponent(\"batBox_basic\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet temp_okItem = this.batBox.getChildByName(\"batBox_y\" + heroRouteOkList.list[x].y + \"_x\" + heroRouteOkList.list[x].x).getComponent(\"batBox_basic\").batBoxName;\r\n\t\t\t\t\t\tconsole.log(repeatIndexItem.batBoxName , temp_okItem);\r\n\t\t\t\t\t\tif (repeatIndexItem.batBoxName != temp_okItem && noRepeatIndex == -1) {//还没检测到出现回滚点，就一直销毁前面的高亮路线\r\n\t\t\t\t\t\t\tthis.currentBox_destroy(heroRouteOkList.list[x]);//--------------------------销毁高亮资源方法\r\n\t\t\t\t\t\t}else{//-----------------------------------------------------------------检测到出现回滚点，停止销毁高亮路线，保留后续循环的路线，因为那些基本上是回滚后的新路线\r\n\t\t\t\t\t\t\tnoRepeatIndex = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let o = 0; o < repeatIndex +1; o++) {//---循环不重复的下标+1的次数来获取确认数组路线\r\n\t\t\t\t\tlet item = {\r\n\t\t\t\t\t\tx\t: heroRouteOkList.list[o].x,\r\n\t\t\t\t\t\ty\t: heroRouteOkList.list[o].y\r\n\t\t\t\t\t}\r\n\t\t\t\t\tok_list.push(item);\r\n\t\t\t\t}\r\n\t\t\t\theroRouteOkList.list = ok_list;\r\n\t\t\t\tconsole.log(repeatIndex,heroRouteOkList.list);\r\n\t\t\t\tconsole.log(noRepeatList,repeatList);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(heroRouteOkList.list);\r\n    },\r\n    //A*算法   (原点目标，终点目标)\r\n    routeDirection: function(startTarget,endTarget){\r\n    \tif (startTarget.x == endTarget.x && startTarget.y == endTarget.y || endTarget.bat_obstacle) { return false; }//---------------如果起点和终点一样就退出方法\r\n    \tlet openList = [];//---------------九宫格临时存放格子数组\r\n    \tlet closeList = [];//--------------九宫格临时存放确认数组\r\n    \tlet sureList = [];//---------------九宫格最终确认数组\r\n    \tlet isSure_start = 0;//------------是否到达终点   0：不是   1：是\r\n    \tlet isSure_end = 0;//--------------是否到达起点   0：不是   1：是\r\n    \tlet minF = 0;//--------------------F值最小值\r\n    \tlet minG = 0;//--------------------G值最小值\r\n    \tlet parent = {x: startTarget.x, y: startTarget.y, isStart: 1, G: 0, H:0, F:0};//-----------isStart: 起点的唯一标识\r\n    \topenList.push(parent);\r\n\t\t//方向数组  也可用作判断格子九宫格里其余格子是否在战场内数组   id：判断方向的数值   direction：上下左右斜方向值\r\n\t\tlet directionList = [{y:0,x:1,direction:1},{y:-1,x:1,direction:2},{y:-1,x:0,direction:3},{y:-1,x:-1,direction:4},{y:0,x:-1,direction:5},{y:1,x:-1,direction:6},{y:1,x:0,direction:7},{y:1,x:1,direction:8}];\r\n\t\tthis.batBox.getChildByName(\"batBox_y\" + startTarget.y + \"_x\" + startTarget.x).setColor(cc.color(\"#008102\"));//-----测试阶段，上颜色标识用\r\n\t\tthis.batBox.getChildByName(\"batBox_y\" + endTarget.y + \"_x\" + endTarget.x).setColor(cc.color(\"#fff\"));//-----测试阶段，上颜色标识用\r\n\t\tvar tempEndTarget = this.batBox.getChildByName(\"batBox_y\" + endTarget.y + \"_x\" + endTarget.x).getComponent(\"batBox_basic\");\r\n\t\tfor (let j = 0; j < openList.length; j++) {\r\n\t\t\tif (isSure_start == 1) { break; }//----------已到达终点，退出循环\r\n\t\t\t//console.log(j+\"——————————————————————————————————————————————————\");\r\n\t\t\t//console.log(parent,openList[j]);\r\n\t\t\tlet obsExList = [];//--------------障碍物上下左右格子的数组\r\n    \t\tlet obsId_right = null;//----------当前障碍物格子的右侧格子--临时禁止加入临时数组\r\n    \t\tlet obsId_down = null;//-----------当前障碍物格子的下侧格子--临时禁止加入临时数组\r\n    \t\tlet obsId_left = null;//-----------当前障碍物格子的左侧格子--临时禁止加入临时数组\r\n    \t\tlet obsId_top = null;//------------当前障碍物格子的上侧格子--临时禁止加入临时数组\r\n\t    \tvar tempEnemyList = [];\r\n    \t\tlet enemId_right = null;//----------当前敌人格子的右侧格子--临时禁止加入临时数组\r\n    \t\tlet enemId_down = null;//-----------当前敌人格子的下侧格子--临时禁止加入临时数组\r\n    \t\tlet enemId_left = null;//-----------当前敌人格子的左侧格子--临时禁止加入临时数组\r\n    \t\tlet enemId_top = null;//------------当前敌人格子的上侧格子--临时禁止加入临时数组\r\n\t\t\tfor (let i = 0; i < directionList.length; i++) {//------------------获取路线障碍物上下左右格子的数组\r\n\t\t\t\t//计算出九宫格内当前循环的格子是否在战场内  原理：利用格子的行列值进行运算，得出结果异常则不属于战场内格子\r\n\t    \t\tlet tempCheckTarget = this.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n\t\t\t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n\t    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n\t    \t\t\t\t\tobsId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n\t    \t\t\t\t\tobsId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n\t    \t\t\t\t\tobsId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n\t    \t\t\t\t\tobsId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n\t    \t\t\t\t\tobsExList.push(obsId_right,obsId_down,obsId_left,obsId_top);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\tvar enemyList2 = [];\r\n\t    \t\t\tfor (var z = 0; z < this.hero_list.length; z++) {\r\n\t    \t\t\t\tif(this.hero_list[z].point == checkTarget.bat_hero && this.hero_list[z].groupId == 2){\r\n\t    \t\t\t\t\tenemyList2.push(this.hero_list[z]);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\tif (enemyList2) {\r\n\t    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n\t    \t\t\t\t\tenemId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n\t    \t\t\t\t\tenemId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n\t    \t\t\t\t\tenemId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n\t    \t\t\t\t\tenemId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n\t    \t\t\t\t\ttempEnemyList.push(enemId_right,enemId_down,enemId_left,enemId_top);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t    \tfor (let i = 0; i < directionList.length; i++) {//------------------获取路线临时数组\r\n\t    \t\tlet isOpen = 0;//------------------是否已记录在临时数组标识   0：不是   1：是\r\n\t    \t\tlet isClose = 0;//-----------------是否已记录在确认数组标识   0：不是   1：是\r\n\t    \t\tlet isObstacle = 0;//--------------是否障碍物   0：不是   1：是\r\n\t    \t\tlet isObsEx = 0;//-----------------当前格子是否位于障碍物格子上下左右侧的格子位置上，用于判断是否处于斜格处理   0：不是   1：是\r\n\t    \t\tvar isEnemy = false;\r\n\t    \t\tvar isEnemy2 = 0;\r\n\t    \t\t//计算出九宫格内当前循环的格子  原理：利用格子的行列值进行运算，得出结果异常则不属于战场内格子\r\n\t    \t\tlet tempCheckTarget = this.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n\t    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t\t\t\t\tvar enemyList2 = [];\r\n\t    \t\t\tfor (var z = 0; z < this.hero_list.length; z++) {\r\n\t    \t\t\t\tif(this.hero_list[z].point == checkTarget.bat_hero && this.hero_list[z].groupId == 2){\r\n\t    \t\t\t\t\tenemyList2.push(this.hero_list[z]);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n\t    \t\t\t\tisObstacle = 1;\r\n\t    \t\t\t}else if(enemyList2.length != 0){\r\n\t    \t\t\t\tisEnemy = true;\r\n\t    \t\t\t}else{\r\n\t\t    \t\t\tfor (let x = 0; x < closeList.length; x++) {//------------------当前循环九宫格格子是否已记录在确认数组\r\n\t\t\t    \t\t\tif (checkTarget.x == closeList[x].x && checkTarget.y == closeList[x].y) {\r\n\t\t\t    \t\t\t\tisClose = 1;\r\n\t\t\t    \t\t\t\tbreak;\r\n\t\t\t    \t\t\t}\r\n\t\t\t    \t\t}\r\n\t\t    \t\t\tfor (let x = 0; x < openList.length; x++) {//-------------------当前循环九宫格格子是否已记录在临时数组\r\n\t\t\t    \t\t\tif (checkTarget.x == openList[x].x && checkTarget.y == openList[x].y) {\r\n\t\t\t    \t\t\t\tisOpen = 1;\r\n\t\t\t    \t\t\t\tbreak;\r\n\t\t\t    \t\t\t}\r\n\t\t\t    \t\t}\r\n\t\t    \t\t\tfor (let o = 0; o < obsExList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t    \t\t\t\t\tif (checkTarget.x == obsExList[o].x && checkTarget.y == obsExList[o].y) {\r\n\t\t    \t\t\t\t\tisObsEx = 1;\r\n\t\t    \t\t\t\t\tbreak;\r\n\t\t    \t\t\t\t}\r\n\t    \t\t\t\t}\r\n\t\t    \t\t\tfor (let o = 0; o < tempEnemyList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t    \t\t\t\t\tif (checkTarget.x == tempEnemyList[o].x && checkTarget.y == tempEnemyList[o].y) {\r\n\t\t    \t\t\t\t\tisEnemy2 = 1;\r\n\t\t    \t\t\t\t\tbreak;\r\n\t\t    \t\t\t\t}\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\tif (isClose == 0 && isOpen == 0 && isObstacle == 0 && isObsEx == 0) {//-------------如任何检查判断为未触发，则视为当前格子是新处理格子\r\n\t\t\t\t\t\tlet H_x = Math.abs(tempEndTarget.x - checkTarget.x);\r\n\t\t\t\t\t\tlet H_y = Math.abs(tempEndTarget.y - checkTarget.y);\r\n\t\t\t\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\t\t\t\tlet G;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(i == 0 || i == 2 || i == 4 || i == 6){\r\n\t\t\t\t\t\t\tG = 10 + parent.G;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tG = 14 + parent.G;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet item = {\r\n\t\t\t\t\t\t\tx: checkTarget.x,\r\n\t\t\t\t\t\t\ty: checkTarget.y,\r\n\t\t\t\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t\t\t\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t\t\t\t    \t\tF: G+H,\r\n\t\t\t\t    \t\tdirection: directionList[i].direction\r\n\t\t\t\t\t\t}\r\n\t\t\t\t        let label_G = new cc.Node();\r\n\t\t\t\t        label_G.addComponent(cc.Label);\r\n\t\t\t\t        label_G.getComponent(cc.Label).fontSize = 12\r\n\t\t\t\t        label_G.getComponent(cc.Label).string = (checkTarget.y + \"\" + checkTarget.x)+ \"，F：\"+(G+H)+  \"\\nG:\"+G+\"，H:\"+H;\r\n\t\t\t\t        tempCheckTarget.addChild(label_G);\r\n\t\t\t\t\t\topenList.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    \tif (openList[0].isStart == 1) {//-----------处理起点的首次增删数组操作\r\n\t    \t\tcloseList.push(openList[0]);\r\n\t\t\t\topenList.splice(0,1);\r\n\t\t\t\tj = -1;//-------------------------------初始化循环次数\r\n\t    \t}\r\n\t    \tfor (let i = 0; i < openList.length; i++) {//----------循环取F值最小值\r\n\t    \t\tif (openList[i] && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n\t    \t\t\tminF = openList[i];\r\n\t    \t\t}\r\n\t    \t\tif (minF.F > openList[i].F) {\r\n\t    \t\t\tminF = openList[i];\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \tfor (let i = 0; i < openList.length; i++) {//----------依靠最新的F值最小值格子得出新的父节点\r\n\t    \t\tif (openList[i].F == minF.F) {\r\n\t    \t\t\tparent = openList[i];\r\n\t    \t\t\tcloseList.push(openList[i]);\r\n\t    \t\t\topenList.splice(i,1);\r\n\t    \t\t\tj = -1;//-------------------------------初始化循环次数\r\n\t    \t\t\tminF = 0;//-----------初始化F值最小值\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \tif (parent.x == tempEndTarget.x && parent.y == tempEndTarget.y) {//---------------如果临时确认数组收录了终点，就退出循环\r\n\t\t\t\tisSure_start = 1;\r\n\t\t\t}\r\n    \t}\r\n\t\tfor (let j = 0; j < closeList.length; j++) {\r\n\t\t\tthis.batBox.getChildByName(\"batBox_y\" + closeList[j].y + \"_x\" + closeList[j].x).setColor(cc.color(\"#008102\"));//-----测试阶段，上颜色标识用\r\n\t\t}\r\n\t\tcloseList = closeList.reverse();\r\n\t\tsureList.push(parent);\r\n\t\t//计算最终路线    原理：从临时确认数组中反过来走到起点\r\n\t\tfor (let j = 0; j < closeList.length; j++) {\r\n\t\t\tif (isSure_end == 1) { break; }//----------已回到起点，退出循环\r\n\t\t\tlet obsExList = [];//--------------障碍物上下左右格子的数组\r\n    \t\tlet obsId_right = null;//----------当前障碍物格子的右侧格子--临时禁止加入临时数组\r\n    \t\tlet obsId_down = null;//-----------当前障碍物格子的下侧格子--临时禁止加入临时数组\r\n    \t\tlet obsId_left = null;//-----------当前障碍物格子的左侧格子--临时禁止加入临时数组\r\n    \t\tlet obsId_top = null;//------------当前障碍物格子的上侧格子--临时禁止加入临时数组\r\n    \t\tlet tempSureList = [];\r\n    \t\t\r\n\t    \tvar tempEnemyList = [];\r\n    \t\tlet enemId_right = null;//----------当前敌人格子的右侧格子--临时禁止加入临时数组\r\n    \t\tlet enemId_down = null;//-----------当前敌人格子的下侧格子--临时禁止加入临时数组\r\n    \t\tlet enemId_left = null;//-----------当前敌人格子的左侧格子--临时禁止加入临时数组\r\n    \t\tlet enemId_top = null;//------------当前敌人格子的上侧格子--临时禁止加入临时数组\r\n\t\t\tconsole.log(j+\"——————————————————————————————————————————————————\");\r\n\t\t\tfor (let i = 0; i < directionList.length; i++) {\r\n\t\t\t\t//获取当前循环的父节点格子  \r\n\t    \t\tlet tempCheckTarget = this.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n\t    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t\t\t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n\t    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n\t    \t\t\t\t\tobsId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n\t    \t\t\t\t\tobsId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n\t    \t\t\t\t\tobsId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n\t    \t\t\t\t\tobsId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n\t    \t\t\t\t\tobsExList.push(obsId_right,obsId_down,obsId_left,obsId_top);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t}\r\n    \t\t\tvar enemyList2 = [];\r\n    \t\t\tfor (var z = 0; z < this.hero_list.length; z++) {\r\n    \t\t\t\tif(this.hero_list[z].point == checkTarget.bat_hero && this.hero_list[z].groupId == 2){\r\n    \t\t\t\t\tenemyList2.push(this.hero_list[z]);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n    \t\t\tif (enemyList2) {\r\n    \t\t\t\tif (i == 0 || i == 2 || i == 4 || i == 6) {\r\n    \t\t\t\t\tenemId_right = {y:(checkTarget.y + directionList[0].y),x:(checkTarget.x + directionList[0].x)};\r\n    \t\t\t\t\tenemId_down = {y:(checkTarget.y + directionList[2].y),x:(checkTarget.x + directionList[2].x)};\r\n    \t\t\t\t\tenemId_left = {y:(checkTarget.y + directionList[4].y),x:(checkTarget.x + directionList[4].x)};\r\n    \t\t\t\t\tenemId_top = {y:(checkTarget.y + directionList[6].y),x:(checkTarget.x + directionList[6].x)};\r\n    \t\t\t\t\ttempEnemyList.push(enemId_right,enemId_down,enemId_left,enemId_top);\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < directionList.length; i++) {\r\n\t    \t\tlet isClose = 0;//-----------------是否已记录在确认数组标识   0：不是   1：是\r\n\t    \t\tlet isObstacle = 0;//--------------是否障碍物   0：不是   1：是\r\n\t    \t\tlet isObsEx = 0;//-----------------当前格子是否位于障碍物格子上下左右侧的格子位置上，用于判断是否处于斜格处理   0：不是   1：是\r\n\t\t\t\tvar isEnemy = false;\r\n\t    \t\tvar isEnemy2 = 0;\r\n\t\t\t\tlet tempCheckTarget = this.batBox.getChildByName(\"batBox_y\" + (parent.y + directionList[i].y) + \"_x\" + (parent.x + directionList[i].x));\r\n\t    \t\tif (tempCheckTarget) {//----------是否存在格子\r\n\t    \t\t\tvar checkTarget = tempCheckTarget.getComponent(\"batBox_basic\");\r\n\t    \t\t\tif (checkTarget.bat_obstacle) {//---------------------当前循环九宫格格子是障碍物\r\n\t    \t\t\t\tisObstacle = 1;\r\n\t    \t\t\t}else if(enemyList2.length != 0){\r\n\t    \t\t\t\tisEnemy = true;\r\n\t    \t\t\t}else{\r\n\t    \t\t\t\tfor (let x = 0; x < closeList.length; x++) {//------------------当前循环九宫格格子是否已记录在确认数组\r\n\t\t\t    \t\t\tif (checkTarget.x == closeList[x].x && checkTarget.y == closeList[x].y) {\r\n\t\t\t    \t\t\t\tfor (let o = 0; o < obsExList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t\t\t    \t\t\t\t\tif (checkTarget.x == obsExList[o].x && checkTarget.y == obsExList[o].y) {\r\n\t\t\t\t    \t\t\t\t\tisObsEx = 1;\r\n\t\t\t\t    \t\t\t\t\tbreak;\r\n\t\t\t\t    \t\t\t\t}\r\n\t\t\t    \t\t\t\t}\r\n\t\t\t\t    \t\t\tfor (let o = 0; o < tempEnemyList.length; o++) {//------------------当前循环九宫格格子是否位于障碍物格子上下左右侧的格子位置上，是的话就不能纳入赋值ghf处理\r\n\t\t\t    \t\t\t\t\tif (checkTarget.x == tempEnemyList[o].x && checkTarget.y == tempEnemyList[o].y) {\r\n\t\t\t\t    \t\t\t\t\tisEnemy2 = 1;\r\n\t\t\t\t    \t\t\t\t\tbreak;\r\n\t\t\t\t    \t\t\t\t}\r\n\t\t\t    \t\t\t\t}\r\n\t\t\t    \t\t\t\tif (isObsEx == 0 && isEnemy2 == 0) {\r\n\t\t\t    \t\t\t\t\ttempSureList.push(closeList[x]);\r\n\t\t\t    \t\t\t\t}\r\n\t\t\t    \t\t\t}\r\n\t\t\t    \t\t}\r\n\t    \t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < tempSureList.length; i++) {//----------循环取F值最小值\r\n\t    \t\tif (tempSureList[i] && minG == 0) {//------------------------为了排除可能会遇到没G值的父格子，当存在的G值的循环才初始化\r\n\t    \t\t\tminG = tempSureList[i];\r\n\t    \t\t}\r\n\t    \t\tif (minG.G > tempSureList[i].G) {\r\n\t    \t\t\tminG = tempSureList[i];\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \tfor (let i = 0; i < tempSureList.length; i++) {//----------依靠最新的G值最小值格子得出新的父节点\r\n\t    \t\tif (tempSureList[i].G == minG.G) {\r\n\t    \t\t\tparent = tempSureList[i];\r\n\t    \t\t\tsureList.push(tempSureList[i]);\r\n\t    \t\t\tminG = 0;//-----------初始化G值最小值\r\n\t    \t\t}\r\n\t    \t}\r\n\t\t\tif (parent.x == startTarget.x && parent.y == startTarget.y) {//---------------如果临时确认数组收录了起点，就退出循环\r\n\t\t\t\tisSure_end = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let j = 0; j < sureList.length; j++) {\r\n\t\t\tthis.batBox.getChildByName(\"batBox_y\" + sureList[j].y + \"_x\" + sureList[j].x).setColor(cc.color(\"#bbb\"));//-----测试阶段，上颜色标识用\r\n\t\t}\r\n\t\t//console.log(sureList,closeList);\r\n\t\treturn sureList.reverse();\r\n    },\r\n    //获取最近敌人\r\n    getNearEnemy: function(target,dataList){\r\n    \tlet tempList = [];\r\n    \tlet enemyList = [];\r\n    \tvar minF = 0;\r\n    \tfor (let i = 0; i < dataList.length; i++) {\r\n    \t\tif (dataList[i].groupId == 2) {\r\n\t\t    \tlet H_x = Math.abs(dataList[i].x - target.x);\r\n\t\t\t\tlet H_y = Math.abs(dataList[i].y - target.y);\r\n\t\t\t\tlet H = (H_x + H_y) * 10;\r\n\t\t\t\tlet G = 0;\r\n\t\t\t\tlet item = {\r\n\t\t\t\t\tx: dataList[i].x,\r\n\t\t\t\t\ty: dataList[i].y,\r\n\t\t    \t\tG: G,//--------------------------------从起点 A 移动到指定方格的移动代价，沿着到达该方格而生成的路径。\r\n\t\t    \t\tH: H,//--------------------------------从指定的方格移动到终点 B 的估算成本\r\n\t\t    \t\tF: G+H\r\n\t\t\t\t}\r\n\t\t\t\ttempList.push(item);\r\n    \t\t\tenemyList.push(dataList[i]);\r\n    \t\t}\r\n    \t}\r\n    \tfor (let i = 0; i < tempList.length; i++) {\r\n    \t\tif (tempList[i].F && minF == 0) {//------------------------为了排除可能会遇到没F值的父格子，当存在的F值的循环才初始化\r\n    \t\t\tminF = tempList[i];\r\n    \t\t}\r\n    \t\tif (minF.F > tempList[i].F) {\r\n    \t\t\tminF = tempList[i];\r\n    \t\t}\r\n    \t}\r\n    \treturn minF;\r\n    },\r\n});\r\n"]}