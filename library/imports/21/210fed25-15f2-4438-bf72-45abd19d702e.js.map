{"version":3,"sources":["..\\..\\..\\..\\assets\\js/assets\\js\\battle_Control.js"],"names":["js_dataControl","require","js_algorithm_A","GroupName","cc","Class","extends","Component","properties","canvas","Node","itemPrefab","default","type","Prefab","choosePrefab","Prefab_obstacle_01","Prefab_obstacle_02","Prefab_obstacle_03","Prefab_hero_01","Prefab_hero_02","Prefab_tempColl_touch","background","batBox","other","enemy","icon_arrow","followSpeed","onLoad","battleInit_basic","checkId","personPrefabNew","batlist","children","hero_list","obstacle_list","hero_route_list","state","name","list","lastId","boxIndex","hero_route_ok_list","isState","isOOOK","indexNum","getcheckId","i","length","batItem","getComponent","batBoxName","bat_hero","point","groupId","console","log","perfabPool","init","battleInit_obstacle","otherList","y","x","j","bat_obstacle","battleInit_obstacle_detail","setObstacle","battleInit_hero","tempList","otherList_lock_id","otherList_lock_point","self","enemyList","id","push","pop","battleInit_hero_detail","updateHeroList","room","heroRouteOkList","getChildByName","on","EventType","TOUCH_START","event","selfItem","self_x","getLocation","self_y","heroList","route","slice","heroName","aaa","getRangeEnemy","startTarget","heroItem","stopMove","checkRoute","routeDirection","getNearEnemy","currentBox","boxItem","temp","box_current","item","instantiate","addChild","setPosition","currentBox_destroy","child","destroy","box","itemList","createEnemy","group","empty","hero_basic","lockTarget","isDie","lastRouteTarget","tempColl_touch","TOUCH_MOVE","isCenter","parent","enemyList2","z","matchOKHeroRoute","TOUCH_CANCEL","touchStop","TOUCH_END","update","dt","targetBoxItem","end","v2","start","position","direction","pNormalize","pSub","pAdd","pMult","sum","pDistance","getHeroByName","endTarget","splice","repeatList","noRepeatList","ok_list","repeatIndex","repeatIndexItem","noRepeatIndex","repeat","temp_okItem","o"],"mappings":"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","file":"battle_Control.js","sourceRoot":"..\\..\\..\\..\\assets\\js","sourcesContent":["﻿//导入外部脚本\r\nvar js_dataControl = require(\"dataControl\");\r\nvar js_algorithm_A = require(\"algorithm_A\");\r\nconst GroupName = require('Types').GroupName;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        canvas: cc.Node,\r\n        itemPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        choosePrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_obstacle_01: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_obstacle_02: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_obstacle_03: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_hero_01: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_hero_02: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        Prefab_tempColl_touch: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        background: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        batBox: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        other: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        enemy: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        icon_arrow: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        followSpeed: 1\r\n    },\r\n    onLoad: function () {\r\n    \t\r\n    \t\r\n    },\r\n    //生成第一层战场数组-基础数据  (关卡id，预存资源对象)\r\n    battleInit_basic: function(checkId,personPrefabNew) {\r\n\t\t//初始化部分数组\r\n    \tthis.batlist = this.batBox.children;//-----------战场基础层  需要批量处理基础层格子数据时候用\r\n    \tthis.hero_list = [];//---------------------------战场英雄存储\r\n    \tthis.obstacle_list = [];//-----------------------战场障碍物存储\r\n    \tthis.hero_route_list = [];//---------------------英雄路线数据\r\n    \tthis.hero_route_list.state = 0;//----------------英雄路线——是否可启用 0=不可用，1=可用\r\n    \tthis.hero_route_list.name = null;//--------------英雄生成名字\r\n    \tthis.hero_route_list.list = [];//----------------英雄路线——存储路线数组\r\n    \tthis.hero_route_list.lastId = -1;//--------------英雄路线——记录上一次格子的名字  -1:初始     加入临时数组时进行赋值\r\n    \tthis.hero_route_list.boxIndex = -1;//------------英雄路线——记录格子下标   -1:初始   \r\n    \t\r\n    \tthis.hero_route_ok_list = [];//---------------------中心点英雄路线数据\r\n    \tthis.hero_route_ok_list.state = 0;//----------------中心点英雄路线——是否可启用 0=不可用，1=可用\r\n    \tthis.hero_route_ok_list.name = null;//--------------中心点英雄生成名字\r\n    \tthis.hero_route_ok_list.list = [];//----------------中心点英雄路线——存储路线数组\r\n    \tthis.hero_route_ok_list.lastId = -1;//--------------中心点英雄路线——记录上一次格子的名字  -1:初始     加入确认数组时进行赋值\r\n    \t\r\n    \tthis.isState = 0;\r\n    \tthis.isOOOK = 1;\r\n    \tthis.indexNum = 0;\r\n    \t\r\n    \tthis.checkId = js_dataControl.getcheckId();//-------获取关卡id\r\n\t\t//var bat = this.batBox.children;\r\n\t\tfor (let i = 0; i < this.batlist.length; i++) {\r\n\t\t\tvar batItem = this.batlist[i].getComponent(\"batBox_basic\");\r\n\t\t\t/*this.batlist.push(bat[i].getComponent(\"batBox_basic\"));\r\n\t\t\tthis.batlist[i].batBoxName = bat[i].name;\r\n\t\t\tthis.batlist[i].bat_hero = {point:null,groupId:null};*/\r\n\t\t\t\r\n\t\t\tbatItem.batBoxName = this.batlist[i].name;\r\n\t\t\tbatItem.bat_hero = {point:null,groupId:null};\r\n\t\t}\r\n\t\tconsole.log(this.batlist);\r\n        this.perfabPool = this.getComponent(\"prefabPool\");\r\n        this.perfabPool.init();\r\n\t\tthis.battleInit_obstacle(this.checkId,personPrefabNew);\r\n    },\r\n    //生成第二层战场数组-障碍物   (关卡id)\r\n    battleInit_obstacle: function(checkId,personPrefabNew){\r\n    \t//关卡序列\r\n    \tif (checkId == 1) {\r\n    \t\tvar otherList = [{y: 0,x: 4,point: 1},{y: 2,x: 4,point: 2},{y: 1,x: 4,point: 3},{y: 1,x: 6,point: 1},{y: 2,x: 8,point: 1}];\r\n    \t}\r\n    \tif (checkId == 2) {\r\n    \t\tvar otherList = [{y: 0,x: 4,point: 1},{y: 2,x: 4,point: 2},{y: 1,x: 4,point: 3}];\r\n    \t}\r\n    \tfor (let i = 0; i < otherList.length; i++) {//-----匹配战场数组\r\n    \t\tfor (let j = 0; j < this.batlist.length; j++) {//--------战场需要遍历50次，所以用batlist，而不用专门获取的batBox.getChildByName\r\n    \t\t\tvar batItem = this.batlist[j].getComponent(\"batBox_basic\");\r\n\t        \tif (batItem.x == otherList[i].x && batItem.y == otherList[i].y) {\r\n\t        \t\tbatItem.bat_obstacle = otherList[i].point;\r\n\t        \t\tthis.battleInit_obstacle_detail(otherList[i].point,batItem);\r\n\t        \t}\r\n    \t\t}\r\n    \t}\r\n    \tconsole.log(this.obstacle_list);\r\n    \tjs_dataControl.setObstacle(this.obstacle_list);\r\n    \tthis.battleInit_hero(this.checkId,personPrefabNew);\r\n    },\r\n    //生成第三层战场数组-英雄   (关卡id)\r\n    battleInit_hero: function(checkId,personPrefabNew){\r\n    \tlet tempList = [{y: 4,x: 2,point: 6},{y: 3,x: 2,point: 7},{y: 2,x: 2,point: 8},{y: 1,x: 2,point: 9},{y: 0,x: 2,point: 10},{y: 4,x: 1,point: 11}];//----我方阵容-测试用的\r\n\t\t//let tempList = [{y: 4,x: 2,point: 6}];\r\n\t\tlet otherList = [];//-----------------------我方阵容\r\n    \tlet otherList_lock_id = 0;//----------------我方阵容——位置是否有重复英雄导入标识  0:是，1:不是\r\n    \tlet otherList_lock_point = 0;//-------------我方阵容——不同年龄系列英雄是否重复导入标识  0:是，1:不是\r\n    \tvar self = this;\r\n    \t//let fulinList = [{id: \"01\",point: 1},{id: \"02\",point: 2},{id: \"03\",point: 3}];//------符灵技能栏\r\n    \tif (checkId == 1) {\r\n\t\t\t//var enemyList = [{y: 4,x: 9,point: 1},{y: 2,x: 9,point: 2},{y: 0,x: 9,point: 3},{y: 3,x: 7,point: 4},{y: 1,x: 7,point: 5}];//----敌方阵容\r\n\t\t\tvar enemyList = [{y: 3,x: 8,point: 1}];\r\n    \t}\r\n    \tif (checkId == 2) {\r\n    \t\tvar enemyList = [{y: 3,x: 9,point: 1},{y: 1,x: 9,point: 2},{y: 0,x: 9,point: 3},{y: 0,x: 7,point: 4},{y: 1,x: 7,point: 5}];//----敌方阵容\r\n    \t}\r\n    \tfor (let i = 0; i < tempList.length; i++) {\r\n    \t\t//我方阵容区域内\r\n    \t\tif (tempList[i].id == \"00\" || tempList[i].id == \"10\" || tempList[i].id == \"20\" || tempList[i].id == \"30\" || tempList[i].id == \"40\"\r\n    \t\t || tempList[i].id == \"01\" || tempList[i].id == \"11\" || tempList[i].id == \"21\" || tempList[i].id == \"31\" || tempList[i].id == \"41\"\r\n    \t\t || tempList[i].id == \"02\" || tempList[i].id == \"12\" || tempList[i].id == \"22\" || tempList[i].id == \"32\" || tempList[i].id == \"42\") {\r\n    \t\t \tif (otherList.length < 5) {//----------------------------不超出5个英雄选择\r\n    \t\t\t\tfor (let j = 0; j < otherList.length; j++) {\r\n\t    \t\t \t\tif (otherList[j].x == tempList[i].x && otherList[j].y == tempList[i].y) {//-------发现已有英雄的位置上再放英雄，标识此次操作不加入阵容数组\r\n\t    \t\t \t\t\totherList_lock_id = 1;\r\n\t    \t\t \t\t}\r\n\t    \t\t \t\tif (otherList[j].point == tempList[i].point) {//---------发现放了不同年龄系列英雄，一个英雄分不同年龄阶段的卡牌\r\n    \t\t \t\t\t\totherList_lock_point = 1;\r\n    \t\t \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n    \t\t}\r\n    \t\tif (otherList.length < 5) {//----------------------------不超出5个英雄选择\r\n\t    \t\tif (otherList_lock_id == 0 && otherList_lock_point == 0) {//------标识们一致允许加入才能增加\r\n\t    \t\t\totherList.push(tempList[i]);\r\n\t    \t\t}\r\n\t    \t\tif (otherList_lock_id == 1 || otherList_lock_point == 1) {//------标识们一致允许加入才能增加\r\n\t    \t\t\totherList.pop();\r\n\t    \t\t\totherList.push(tempList[i]);\r\n\t    \t\t}\r\n    \t\t}\r\n    \t\t//初始化临时用的标识值\r\n    \t\totherList_lock_id = 0;\r\n    \t\totherList_lock_point = 0;\r\n\t\t}\r\n\t\t\r\n    \tfor (let i = 0; i < otherList.length; i++) {//-----我方英雄导入战场\r\n    \t\tfor (let j = 0; j < this.batlist.length; j++) {//--------战场需要遍历50次，所以用batlist，而不用专门获取的batBox.getChildByName\r\n    \t\t\tvar batItem = this.batlist[j].getComponent(\"batBox_basic\");\r\n\t        \tif (batItem.x == otherList[i].x && batItem.y == otherList[i].y) {\r\n\t        \t\tbatItem.bat_hero = {\r\n\t        \t\t\tpoint: otherList[i].point,\r\n\t        \t\t\tgroupId: 1\r\n\t        \t\t}\r\n\t        \t\t//this.batBox.getChildByName(\"batBox_y\" + batItem.y + \"_x\" + batItem.x).bat_hero = batItem.bat_hero;\r\n\t        \t\tthis.battleInit_hero_detail(otherList[i].point,batItem,1,personPrefabNew);\r\n\t        \t}\r\n    \t\t}\r\n    \t}\r\n    \tfor (let i = 0; i < enemyList.length; i++) {//-----敌方英雄导入战场\r\n    \t\tfor (let j = 0; j < this.batlist.length; j++) {//--------战场需要遍历50次，所以用batlist，而不用专门获取的batBox.getChildByName\r\n    \t\t\tvar batItem = this.batlist[j].getComponent(\"batBox_basic\");\r\n\t        \tif (batItem.x == enemyList[i].x && batItem.y == enemyList[i].y) {\r\n\t        \t\tbatItem.bat_hero = {\r\n\t        \t\t\tpoint: enemyList[i].point,\r\n\t        \t\t\tgroupId: 2\r\n\t        \t\t}\r\n\t        \t\t//this.batBox.getChildByName(\"batBox_y\" + batItem.y + \"_x\" + batItem.x).bat_hero = batItem.bat_hero;\r\n\t        \t\tthis.battleInit_hero_detail(enemyList[i].point,batItem,2,personPrefabNew);\r\n\t        \t}\r\n    \t\t}\r\n    \t}\r\n    \t//console.log(this.batlist,this.batBox.getChildByName(\"batBox_y\" + 0 + \"_x\" + 2).getComponent(\"batBox_basic\"));\r\n    \t\r\n    \tjs_dataControl.updateHeroList(this.hero_list);\r\n    \tconsole.log(js_dataControl.room());\r\n\t\tvar heroRouteOkList = this.hero_route_ok_list;\r\n    \tthis.background.getChildByName(\"stopAllMove\").on(cc.Node.EventType.TOUCH_START, function ( event ) {\r\n\t\t\tlet selfItem = this;\r\n\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\tlet heroList = self.hero_list;\r\n\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\theroList[j].route = heroList[j].route.slice(0,heroList[j].indexNum+1);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.background.getChildByName(\"goAllMove\").on(cc.Node.EventType.TOUCH_START, function ( event ) {\r\n\t\t\tlet selfItem = this;\r\n\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\tlet heroList = self.hero_list;\r\n\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\t//if (heroList[j].groupId == 1) {\r\n\t\t\t\tif (heroList[j].heroName == \"hero_6\") {\r\n\t\t\t\t\t//js_algorithm_A.getNearEnemy({target:heroList[j],dataList:heroList,batBox:self.batBox})\r\n\t\t\t\t\tlet aaa = js_algorithm_A.getRangeEnemy({\r\n\t\t\t\t\t\tstartTarget:\theroList[j],\r\n\t\t\t\t\t\t//endTarget:\t\tself.batBox.getChildByName(\"batBox_y\" + 3 + \"_x\" + 7).getComponent(\"batBox_basic\"),\r\n\t\t\t\t\t\tbatBox:\t\t\tself.batBox,\r\n\t\t\t\t\t\thero_list:\t\tself.hero_list,\r\n\t\t\t\t\t\theroItem:\t\theroList[j]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(aaa);\r\n\t\t\t\t\t/*let checkRoute = js_algorithm_A.routeDirection({\r\n\t\t\t\t\t\tstartTarget:\theroList[j],\r\n\t\t\t\t\t\tendTarget:\t\tself.batBox.getChildByName(\"batBox_y\" + 3 + \"_x\" + 7).getComponent(\"batBox_basic\"),\r\n\t\t\t\t\t\tbatBox:\t\t\tself.batBox,\r\n\t\t\t\t\t\thero_list:\t\tself.hero_list,\r\n\t\t\t\t\t\theroItem:\t\theroList[j]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(checkRoute);\r\n\t\t\t\t\theroList[j].route = checkRoute;\r\n\t\t\t\t\theroList[j].state = 11;\r\n\t\t\t\t\theroList[j].indexNum = 0;*/\r\n\t\t\t\t\t\r\n\t\t\t\t\t//self.matchOKHeroRoute(heroList[j].name,self.getNearEnemy(heroList[j],heroList));//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t\t//console.log(heroList[j],checkRoute,self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n    },\r\n    stopMove:function (point) {\r\n    \tvar self = this;\r\n    \tlet heroList = self.hero_list;\r\n\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\tif (heroList[j].point == point) {\r\n\t\t\t//if (heroList[j].heroName == \"hero_6\") {\r\n\t\t\t\tlet checkRoute = self.routeDirection(heroList[j],self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t\theroList[j].route = checkRoute;\r\n\t\t\t\theroList[j].state = 11;\r\n\t\t\t\theroList[j].indexNum = 0;\r\n\t\t\t\t//lf.matchOKHeroRoute(heroList[j].name,self.getNearEnemy(heroList[j],heroList));//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t//console.log(heroList[j],checkRoute,self.getNearEnemy(heroList[j],heroList));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n    },\r\n    //选取格子高亮   (格子对象)\r\n    currentBox: function(boxItem){\r\n    \tvar temp = this.batBox.getChildByName(\"batBox_y\" + boxItem.y + \"_x\" + boxItem.x);\r\n    \tif(temp.getComponent(\"batBox_basic\").box_current == 0){//------------------------------防止重复加载同一个格子高亮导致出现异常bug情况\r\n\t\t\ttemp.getComponent(\"batBox_basic\").box_current = 1;//-------------------------------高亮选择到的格子\r\n\t    \tlet item = cc.instantiate(this.icon_arrow); \r\n\t\t\ttemp.addChild(item);\r\n\t\t\titem.setPosition(boxItem.x,boxItem.y);\r\n\t    \titem.name = \"currentBox\";\r\n    \t}\r\n    },\r\n    //销毁高亮资源   (格子对象)\r\n    currentBox_destroy: function(boxItem){\r\n\t\tthis.batBox.getChildByName(\"batBox_y\" + boxItem.y + \"_x\" + boxItem.x).getComponent(\"batBox_basic\").box_current = 0;//----------------------清除高亮记录\r\n\t\tlet child = this.batBox.getChildByName(\"batBox_y\" + boxItem.y + \"_x\" + boxItem.x).getChildByName(\"currentBox\");\r\n\t\tif (child) { child.destroy(); }//--------------------------------------------------------------销毁高亮资源\r\n    },\r\n    //障碍物具体参数数组   (障碍物编号，格子对象)\r\n    battleInit_obstacle_detail: function(point,box){\r\n    \tif (point == 1) { var item = cc.instantiate(this.Prefab_obstacle_01); }\r\n    \tif (point == 2) { var item = cc.instantiate(this.Prefab_obstacle_02); }\r\n    \tif (point == 3) { var item = cc.instantiate(this.Prefab_obstacle_03); }\r\n    \tthis.batBox.getChildByName(\"batBox_y\" + box.y + \"_x\" + box.x).addChild(item);\r\n    \titem.setPosition(0,0);\r\n    \titem.name = \"point_\" + point;\r\n    \tvar itemList = {\r\n    \t\tx\t\t: box.x,\t\t\t\t//障碍物当前所处x轴\r\n    \t\ty\t\t: box.y,\t\t\t\t//障碍物当前所处y轴\r\n    \t}\r\n    \tthis.obstacle_list.push(itemList);\r\n    \t\r\n    },\r\n    //英雄具体参数数组   (英雄编号，格子对象，敌我英雄标识id: 1=我方   2=敌方)\r\n    battleInit_hero_detail: function(point,box,groupId,personPrefabNew){\r\n    \tif (point == 1) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 2) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 3) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 4) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 5) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 6) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 7) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 8) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 9) { var item = this.perfabPool.createEnemy(); }\r\n    \tif (point == 10) { var item = this.perfabPool.createEnemy(); }\r\n\t\tif (point == 11) { var item = this.perfabPool.createEnemy(); }\r\n\t\tif(groupId == 1){\r\n\t\t\titem.getComponent('person').group = GroupName.other\r\n\t\t\tthis.other.addChild(item);\r\n\t\t}\r\n\t\tif(groupId == 2){\r\n\t\t\titem.getComponent('person').group = GroupName.empty;\r\n\t\t\tthis.enemy.addChild(item);\r\n\t\t}\r\n\t\tvar x = this.batBox.getChildByName(\"batBox_y\" + box.y + \"_x\" + box.x).x;\r\n\t\tvar y = this.batBox.getChildByName(\"batBox_y\" + box.y + \"_x\" + box.x).y;\r\n    \titem.setPosition(x,y);\r\n    \titem.name = \"hero_\" + point;\r\n    \tif(groupId == 1){ var hero_basic = this.other.getChildByName(item.name).getComponent(\"person\"); }\r\n    \tif(groupId == 2){ var hero_basic = this.enemy.getChildByName(item.name).getComponent(\"person\"); }\r\n    \thero_basic.groupId = groupId;\r\n    \thero_basic.heroName = item.name;\r\n    \thero_basic.x = box.x;\r\n    \thero_basic.y = box.y;\r\n    \thero_basic.point = point;\r\n    \thero_basic.groupId = groupId,\t\t\t\t//英雄敌我阵容标识\r\n\t\thero_basic.heroName = item.name,\t\t\t//英雄预存资源生成名称\r\n\t\thero_basic.x\t\t= box.x,\t\t\t\t//英雄当前所处x轴\r\n\t\thero_basic.y\t\t= box.y,\t\t\t\t//英雄当前所处y轴\r\n\t\thero_basic.point\t= point,\t\t\t\t//英雄标记  纪录具体是哪个英雄\r\n\t\thero_basic.indexNum = 0,\t\t\t\t\t//英雄移动路线的当前到达位置，就是说数组里的第几个位置\r\n\t\thero_basic.route\t= [],\t\t\t\t\t//英雄移动路线   状态切换为移动时，赋值路线\r\n\t\thero_basic.lockTarget = null,\t\t\t\t\t//英雄移动路线里锁定的最终目标物体\r\n\t\thero_basic.state\t= 10,\t\t\t\t\t//英雄状态   10：待命，11：移动\r\n\t\thero_basic.isDie   = 1\t\t\t\t\t\t//死亡标识   0：死亡，1:未死亡\r\n    \t\r\n    \t/*let itemList = {\r\n    \t\tgroupId : groupId,\t\t\t\t//英雄敌我阵容标识\r\n    \t\theroName: item.name,\t\t\t//英雄预存资源生成名称\r\n    \t\tx\t\t: box.x,\t\t\t\t//英雄当前所处x轴\r\n    \t\ty\t\t: box.y,\t\t\t\t//英雄当前所处y轴\r\n    \t\tpoint\t: point,\t\t\t\t//英雄标记  纪录具体是哪个英雄\r\n    \t\tindexNum: 0,\t\t\t\t\t//英雄移动路线的当前到达位置，就是说数组里的第几个位置\r\n    \t\troute\t: [],\t\t\t\t\t//英雄移动路线   状态切换为移动时，赋值路线\r\n    \t\tlockTarget: null,\t\t\t\t\t//英雄移动路线里锁定的最终目标物体\r\n\t\t\tstate\t: 10,\t\t\t\t\t//英雄状态   10：待命，11：移动\r\n\t\t\tisDie   : 1\t\t\t\t\t\t//死亡标识   0：死亡，1:未死亡\r\n    \t}*/\r\n    \tthis.hero_list.push(hero_basic);\r\n    \tvar self = this;\r\n\t\tvar heroRouteOkList = this.hero_route_ok_list;\r\n\t\tvar lastRouteTarget = null;//-------------------用作碰触到障碍物后保留前一个格子对象\r\n\t\tif(groupId == 1){\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_START, function ( event ) {\r\n\t\t\t\tlet selfItem = this;\r\n\t\t\t\t//console.log(selfItem);\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\tif (self.background.getChildByName(\"tempColl_touch\")) { self.background.getChildByName(\"tempColl_touch\").destroy();}//--------销毁之前生成的临时路线碰触点 \r\n\t\t\t\t//---生成临时路线碰触点   如果不重新生成，会出现触碰点一直碰着相同格子没反应的问题，例如不断触碰起点，碰撞系统好像如果不离开碰触体，就不会重新算碰撞到\r\n\t\t\t\tlet tempColl_touch = cc.instantiate(self.Prefab_tempColl_touch);\r\n\t\t\t\tself.background.addChild(tempColl_touch);\r\n\t\t\t\ttempColl_touch.setPosition(self_x,self_y);\r\n\t\t\t\tself.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem = null;//---初始化碰撞点上的格子对象\r\n\t\t\t\t\r\n\t\t    \t/*if (heroRouteOkList.list.length != 0) {\r\n\t\t\t\t\tlet heroList = self.hero_list;\r\n\t\t\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\t\t\tif(self.hero_list[j].heroName == selfItem.name){//--------------找出赋值英雄移动数组\r\n\t\t\t\t\t\t\tself.hero_list[j].state = 10;//------------------------------------英雄状态切换为：移动\r\n\t\t\t\t\t\t\tself.hero_list[j].route = heroRouteOkList.list;//------------------赋值路线\r\n\t\t\t\t\t\t\tself.hero_list[j].indexNum = 0;//----------------------------------初始化移动路线的到达位置\r\n\t\t\t\t\t\t\theroRouteOkList.list = [];//---------------------------临时路线清空\r\n\t\t\t\t\t\t\theroRouteOkList.state = 0;//---------------------------临时路线状态改为不启用\r\n\t\t\t\t\t\t\theroRouteOkList.name = null;//-------------------------临时路线的英雄名清除\r\n\t\t\t\t\t\t\theroRouteOkList.lastId = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t});\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_MOVE, function ( event ) {\r\n\t\t\t\tlet selfItem = this;\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\tself.background.getChildByName(\"tempColl_touch\").x = self_x;//-------实时更改临时路线碰触点位置\r\n\t\t\t\tself.background.getChildByName(\"tempColl_touch\").y = self_y;\r\n\t\t\t\tlet isCenter = 0;\r\n\t\t\t\tvar boxItem = self.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem;\r\n\t\t\t\tif (boxItem) {\r\n\t\t\t\t\t//console.log(111);\r\n\t\t\t\t\tif (boxItem.name == \"batBox_Center\") {\r\n\t\t\t\t\t\tboxItem = boxItem.parent.getComponent(\"batBox_basic\");\r\n\t\t\t\t\t\tisCenter = 1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tboxItem = boxItem.getComponent(\"batBox_basic\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar enemyList2 = [];\r\n\t    \t\t\tfor (var z = 0; z < self.hero_list.length; z++) {\r\n\t    \t\t\t\t//console.log(self.hero_list[z].point,boxItem.bat_hero.point);\r\n\t    \t\t\t\tif(self.hero_list[z].point == boxItem.bat_hero.point && self.hero_list[z].groupId == 2){//获取当前格子上是否有敌人\r\n\t    \t\t\t\t\tenemyList2.push(self.hero_list[z]);\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\t//console.log(boxItem.bat_hero);\r\n\t    \t\t\t//console.log(enemyList2);\r\n\t    \t\t\t//if (!boxItem.bat_obstacle && enemyList2.length == 0) {\r\n\t\t\t\t\tif (!boxItem.bat_obstacle) {\r\n\t\t\t\t\t\t//console.log(boxItem.batBoxName,heroRouteOkList.lastId);\r\n\t\t\t\t\t\tif (heroRouteOkList.lastId == -1) {//--------------------------------还没记录到上一次的格子名字，证明是在获取第一次路线信息\r\n\t\t\t\t\t\t\t//console.log(666);\r\n\t\t\t\t\t\t\tfor (let i = 0; i < self.hero_list.length; i++) {//------------循环英雄数组\r\n\t\t\t\t\t\t\t\tif (self.hero_list[i].heroName == selfItem.name) {//----------匹配当前点击的格子上是否存在英雄\r\n\t\t\t\t\t\t\t\t\t//console.log(333);\r\n\t\t\t\t\t\t\t\t\tself.matchOKHeroRoute(selfItem.name,boxItem);//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif (isCenter == 1) {\r\n\t\t\t\t\t\t\t\t//console.log(444);\r\n\t\t\t\t\t\t\t\tif(heroRouteOkList.lastId != boxItem.batBoxName){//----------当前触碰的格子不是上一次记录的格子（此判断为了防止不断触碰相同格子一直执行以下方法）\r\n\t\t\t\t\t\t\t\t\t//console.log(555);\r\n\t\t\t\t\t\t\t\t\tself.matchOKHeroRoute(heroRouteOkList.name,boxItem);//-------传参英雄名和格子对象给确认数组\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_CANCEL, function ( event ) {\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\t//console.log(heroRouteOkList.list,heroRouteOkList.name);\r\n\t\t\t\tvar boxItem = self.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem;\r\n\t\t\t\tif (boxItem.name == \"batBox_Center\") {\r\n\t\t\t\t\tboxItem = boxItem.parent.getComponent(\"batBox_basic\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tboxItem = boxItem.getComponent(\"batBox_basic\");\r\n\t\t\t\t}\r\n\t\t\t\tif(boxItem.bat_hero.groupId != 2){//-----------------------------松手时也要检测松手位置的格子上是否有敌人，有就不再加入路线\r\n\t\t\t\t\tself.matchOKHeroRoute(heroRouteOkList.name,boxItem);//-------传参英雄名和格子对象给确认数组，有时越墙后也能填补后续路线\r\n\t\t\t\t}\r\n\t\t\t\tself.touchStop(boxItem);\r\n\t\t\t});\r\n\t\t\tthis.other.getChildByName(\"hero_\" + point).on(cc.Node.EventType.TOUCH_END, function ( event ) {\r\n\t\t\t\tlet self_x = event.getLocation().x;\r\n\t\t\t\tlet self_y = event.getLocation().y;\r\n\t\t\t\tvar boxItem = self.background.getChildByName(\"tempColl_touch\").getComponent(\"colliderListener\").boxItem;\r\n\t\t\t\tif (boxItem.name == \"batBox_Center\") {\r\n\t\t\t\t\tboxItem = boxItem.parent.getComponent(\"batBox_basic\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tboxItem = boxItem.getComponent(\"batBox_basic\");\r\n\t\t\t\t}\r\n\t\t\t\tif(boxItem.bat_hero.groupId != 2){//-----------------------------松手时也要检测松手位置的格子上是否有敌人，有就不再加入路线\r\n\t\t\t\t\tself.matchOKHeroRoute(heroRouteOkList.name,boxItem);//-------传参英雄名和格子对象给确认数组，有时越墙后也能填补后续路线\r\n\t\t\t\t}\r\n\t\t\t\tself.touchStop(boxItem);\r\n\t\t\t});\r\n\t\t}\r\n    },\r\n    update: function (dt) {\r\n    \tlet self = this;\r\n\t\tlet heroList = self.hero_list;\r\n\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\tif(heroList[j].state == 11){//--------------找出赋值英雄移动数组\r\n\t\t\t\tlet targetBoxItem = self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum].y + \"_x\" + heroList[j].route[heroList[j].indexNum].x);\r\n\t\t\t\tlet end = cc.v2(targetBoxItem.x,targetBoxItem.y);//------------------------获取下个目标xy\r\n\t\t\t\tif(heroList[j].groupId == 1){ var start = self.other.getChildByName(heroList[j].heroName).position;}//-------------获取目标当前xy \r\n\t\t\t\tif(heroList[j].groupId == 2){ var start = self.enemy.getChildByName(heroList[j].heroName).position;}//-------------获取目标当前xy\r\n\t\t\t\tlet direction = cc.pNormalize(cc.pSub(end, start));//------------------------先获取俩个向量的差，然后返回一个长度为1的标准化后的向量\r\n\t\t\t\tlet item = cc.pAdd(start, cc.pMult(direction, self.followSpeed ));//----缩放上面的标准化向量，然后把初始目标xy加上缩放的向量\r\n\t\t\t\tif(heroList[j].groupId == 1){ self.other.getChildByName(heroList[j].heroName).setPosition(item);}//----------------更新目标位置\r\n\t\t\t\tif(heroList[j].groupId == 2){ self.enemy.getChildByName(heroList[j].heroName).setPosition(item);}//----------------更新目标位置\r\n\t\t\t\tlet sum = cc.pDistance(start, end);\r\n\t\t\t\tif (sum <= 1 && heroList[j].indexNum < heroList[j].route.length) {//-----------------向量测出英雄和下一个格子中心在1范围内就进入下一个路线\r\n\t\t\t\t\theroList[j].x = targetBoxItem.getComponent(\"batBox_basic\").x;//----------------------------------------英雄当前x轴修改\r\n\t\t\t\t\theroList[j].y = targetBoxItem.getComponent(\"batBox_basic\").y;//----------------------------------------英雄当前y轴修改\r\n\t\t\t\t\tjs_dataControl.updateHeroList(heroList);//----------------更新存储数据层js的英雄详细数组\r\n\t\t\t\t\tif (heroList[j].route[heroList[j].indexNum-1]) {//清除当前移动对象上一步格子里的标识\r\n\t\t\t\t\t\t//console.log(self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum-1].y + \"_x\" + heroList[j].route[heroList[j].indexNum-1].x).getComponent(\"batBox_basic\").bat_hero);\r\n\t\t\t\t\t\tself.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum-1].y + \"_x\" + heroList[j].route[heroList[j].indexNum-1].x).getComponent(\"batBox_basic\").bat_hero = {point:null,groupId:null};\r\n\t\t\t\t\t\t//console.log(self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum-1].y + \"_x\" + heroList[j].route[heroList[j].indexNum-1].x).getComponent(\"batBox_basic\").bat_hero);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(targetBoxItem.getComponent(\"batBox_basic\"));\r\n\t\t\t\t\t\r\n\t\t\t\t\t//targetBoxItem.getComponent(\"batBox_basic\").bat_hero.point = heroList[j].point;//------更改第一层战场格子上的英雄标记\r\n\t\t\t\t\ttargetBoxItem.getComponent(\"batBox_basic\").bat_hero = {\r\n\t\t\t\t\t\tpoint:\t\theroList[j].point,//------更改第一层战场格子上的英雄标记\r\n\t\t\t\t\t\tgroupId:\theroList[j].groupId\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(heroList[j].groupId,self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum].y + \"_x\" + heroList[j].route[heroList[j].indexNum].x).getComponent(\"batBox_basic\").bat_hero );\r\n\t\t\t\t\t/*if(heroList[j].route[heroList[j].indexNum+1] && self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum+1].y + \"_x\" + heroList[j].route[heroList[j].indexNum+1].x).getComponent(\"batBox_basic\").bat_hero.groupId == 2){\r\n\t\t\t\t\t\tfor (var i = 0; i < heroList.length; i++) {\n\t\t\t\t\t\t\tif(heroList[i].point == heroList[j].lockTarget.point && heroList[i].groupId == heroList[j].lockTarget.groupId){\r\n\t\t\t\t\t\t\t\tvar endTarget = self.batBox.getChildByName(\"batBox_y\" + heroList[i].y + \"_x\" + heroList[i].x).getComponent(\"batBox_basic\");\r\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(heroList[j].groupId,endTarget);\r\n\t\t\t\t\t\tlet checkRoute = js_algorithm_A.routeDirection({\r\n\t\t\t\t\t\t\tstartTarget:\tself.batBox.getChildByName(\"batBox_y\" + heroList[j].y + \"_x\" + heroList[j].x).getComponent(\"batBox_basic\"),\r\n\t\t\t\t\t\t\tendTarget:\t\tendTarget,\r\n\t\t\t\t\t\t\tbatBox:\t\t\tself.batBox,\r\n\t\t\t\t\t\t\thero_list:\t\tself.hero_list,\r\n\t\t\t\t\t\t\theroItem:\t\theroList[j]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(checkRoute);\r\n\t\t\t\t\t\theroList[j].route = checkRoute;\r\n\t\t\t\t\t}*/\r\n\t\t\t\t\t//英雄路线移动完毕后执行以下方法\r\n\t\t\t\t\tif ((heroList[j].indexNum+1) == heroList[j].route.length) {\r\n\t\t\t\t\t\theroList[j].state = 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t\theroList[j].indexNum++;\r\n\t\t\t\t\t/*if(self.batBox.getChildByName(\"batBox_y\" + heroList[j].route[heroList[j].indexNum].y + \"_x\" + heroList[j].route[heroList[j].indexNum].x).getComponent(\"batBox_basic\").bat_hero.groupId == 1){\r\n\t\t\t\t\t\t//---获取A*填充数组，条件是当前确认数组最后一个格子对象和最新所选到的格子对象，用作处理可能越几格的路线填充\r\n\t\t\t\t\t\tlet checkRoute = this.routeDirection(targetBoxItem,boxItem);\r\n\t\t\t\t\t\tconsole.log(222222,checkRoute);\r\n\t\t\t\t\t}*/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n    //获取英雄目标  ---根据英雄节点名字\r\n    getHeroByName: function(name){//\r\n    \tfor (let i = 0; i < this.hero_list.length; i++) {//------------循环英雄数组\r\n\t\t\tif (this.hero_list[i].heroName == name) {//----------匹配当前点击的格子上是否存在英雄\r\n\t\t\t\treturn this.hero_list[i];\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n    //鼠标或手指碰触结束   (路线确认数组)\r\n    touchStop: function(boxItem){\r\n    \tvar self = this;\r\n\t\tvar heroRouteOkList = this.hero_route_ok_list;\r\n\t\tfor (let z = 0; z < heroRouteOkList.list.length; z++) {\r\n\t\t\tself.currentBox_destroy(heroRouteOkList.list[z]);//--------------------------销毁高亮资源方法\r\n\t\t}\r\n\t\t//console.log(self.hero_list);\r\n    \tif (heroRouteOkList.list.length != 0) {\r\n\t\t\tlet heroList = self.hero_list;\r\n\t\t\tfor (let j = 0; j < heroList.length; j++) {//---------匹配英雄表\r\n\t\t\t\tif(heroList[j].heroName == heroRouteOkList.name){//--------------找出赋值英雄移动数组\r\n\t\t\t\t\theroList[j].state = 11;//------------------------------------英雄状态切换为：移动\r\n\t\t\t\t\theroList[j].route = heroRouteOkList.list;//------------------赋值路线\r\n\t\t\t\t\theroList[j].indexNum = 0;//----------------------------------初始化移动路线的到达位置\r\n\t\t\t\t\theroList[j].lockTarget = boxItem.bat_hero;//-----------------赋值英雄锁定的目标\r\n\t\t\t\t\theroRouteOkList.list = [];//---------------------------临时路线清空\r\n\t\t\t\t\theroRouteOkList.state = 0;//---------------------------临时路线状态改为不启用\r\n\t\t\t\t\theroRouteOkList.name = null;//-------------------------临时路线的英雄名清除\r\n\t\t\t\t\theroRouteOkList.lastId = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n    //检测触碰到的英雄-确认   (英雄名,格子对象)\r\n    matchOKHeroRoute: function(heroName,boxItem){\r\n    \tlet heroRouteOkList = this.hero_route_ok_list;\r\n\t\theroRouteOkList.state = 1;//----------------------------------临时路线记录数组启用\r\n\t\theroRouteOkList.name = heroName;//----------------------------临时路线数组，记录英雄标识\r\n\t\theroRouteOkList.lastId = boxItem.batBoxName;//----------------赋值当前格子的名字\r\n\t\tif (heroRouteOkList.list.length == 0) {//-----------------------------已选格子不再执行以下方法\r\n    \t\tlet item = {\r\n    \t\t\tx\t: boxItem.x,\r\n    \t\t\ty\t: boxItem.y\r\n    \t\t}\r\n    \t\theroRouteOkList.list.push(item);\r\n\t\t\tthis.currentBox(boxItem);\r\n\t\t}else{\r\n\t\t\tlet z = -1;//--------------获取确认数组的最后一个格子id\r\n\t\t\t//---获取A*填充数组，条件是当前确认数组最后一个格子对象和最新所选到的格子对象，用作处理可能越几格的路线填充\r\n\t\t\tlet checkRoute = js_algorithm_A.routeDirection({\r\n\t\t\t\tstartTarget:\theroRouteOkList.list[heroRouteOkList.list.length-1],\r\n\t\t\t\tendTarget:\t\tboxItem,\r\n\t\t\t\tbatBox:\t\t\tthis.batBox,\r\n\t\t\t\thero_list:\t\tthis.hero_list,\r\n\t\t\t\theroItem:\t\tthis.getHeroByName(heroName)\r\n\t\t\t});\r\n\t\t\tconsole.log(checkRoute,heroRouteOkList.list);\r\n\t\t\tif (checkRoute) { checkRoute.splice(0,1); }//-----------清空A*返回的路线数组的第一个格子路线，因为会和旧路线最后一个格子重复了\r\n\t\t\tlet repeatList = [];//-----------------存储A*填充数组里和当前确认数组重复的格子对象，用作出现路线重复回滚\r\n\t\t\tlet noRepeatList = [];//---------------存储A*填充数组里不和当前确认数组不重复的格子对象，用作出现路线重复回滚时，可以继续填充路线\r\n\t\t\tlet ok_list = [];//--------------------临时存储确认数组的list\r\n\t\t\tlet repeatIndex = -1;//----------------记录A*填充数组最后一个格子下标   -1:初始   \r\n\t\t\tlet repeatIndexItem = null;//----------记录A*填充数组最后一个格子对象   -1:初始   \r\n\t\t\tlet noRepeatIndex = -1;//--------------记录回滚点是否触发的标识   1:是，2:否  \r\n\t\t\tfor (let i = 0; i < checkRoute.length; i++) {\r\n\t\t\t\tfor (let j = 0; j < heroRouteOkList.list.length; j++) {\r\n\t\t\t\t\tif (heroRouteOkList.list[j].x == checkRoute[i].x && heroRouteOkList.list[j].y == checkRoute[i].y) {\r\n\t\t\t\t\t\trepeatList.push(checkRoute[i]);\r\n\t\t\t\t\t\tcheckRoute[i].repeat = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\theroRouteOkList.list.push(checkRoute[i]);\r\n\t\t\t\tthis.currentBox(this.batBox.getChildByName(\"batBox_y\" + checkRoute[i].y + \"_x\" + checkRoute[i].x).getComponent(\"batBox_basic\"));\r\n\t\t\t}\r\n\t\t\t//console.log(repeatList,heroRouteOkList.list);\r\n\t\t\tif (repeatList.length > 0) {//-----------A*填充数组存在2个值时代表越墙或者终点不只在起点九宫格\r\n\t\t\t\tfor (let x = 0; x < heroRouteOkList.list.length; x++) {\r\n\t\t\t\t\tif (repeatIndex == -1) {//-----------------标识不存在时\r\n\t\t\t\t\t\tif (repeatList[repeatList.length-1].x == heroRouteOkList.list[x].x && repeatList[repeatList.length-1].y == heroRouteOkList.list[x].y) {//------当前格子id等于确认数组id时\r\n\t\t\t\t\t\t\trepeatIndex = x;//-----------------赋值标识为当前循环下标\r\n\t\t\t\t\t\t\trepeatIndexItem = this.batBox.getChildByName(\"batBox_y\" + heroRouteOkList.list[x].y + \"_x\" + heroRouteOkList.list[x].x).getComponent(\"batBox_basic\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet temp_okItem = this.batBox.getChildByName(\"batBox_y\" + heroRouteOkList.list[x].y + \"_x\" + heroRouteOkList.list[x].x).getComponent(\"batBox_basic\").batBoxName;\r\n\t\t\t\t\t\tconsole.log(repeatIndexItem.batBoxName , temp_okItem,noRepeatIndex);\r\n\t\t\t\t\t\tif (repeatIndexItem.batBoxName != temp_okItem && noRepeatIndex == -1) {//还没检测到出现回滚点，就一直销毁前面的高亮路线\r\n\t\t\t\t\t\t\tthis.currentBox_destroy(heroRouteOkList.list[x]);//--------------------------销毁高亮资源方法\r\n\t\t\t\t\t\t}else{//-----------------------------------------------------------------检测到出现回滚点，停止销毁高亮路线，保留后续循环的路线，因为那些基本上是回滚后的新路线\r\n\t\t\t\t\t\t\tnoRepeatIndex = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let o = 0; o < repeatIndex +1; o++) {//---循环不重复的下标+1的次数来获取确认数组路线\r\n\t\t\t\t\tlet item = {\r\n\t\t\t\t\t\tx\t: heroRouteOkList.list[o].x,\r\n\t\t\t\t\t\ty\t: heroRouteOkList.list[o].y\r\n\t\t\t\t\t}\r\n\t\t\t\t\tok_list.push(item);\r\n\t\t\t\t}\r\n\t\t\t\theroRouteOkList.list = ok_list;\r\n\t\t\t\tconsole.log(repeatIndex,heroRouteOkList.list);\r\n\t\t\t\tconsole.log(noRepeatList,repeatList);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(heroRouteOkList.list);\r\n    },\r\n    \r\n});\r\n"]}